import{_ as n,c as s,o as a,a as t}from"./app.64b20f26.js";const y='{"title":"Multi-nested database connections example","description":"","frontmatter":{"title":"Multi-nested database connections example"},"headers":[{"level":2,"title":"Sharding 1000 Robots into 10 Sqlite DB shards - referencing each in a Master SqlServer RDBMS","slug":"sharding-1000-robots-into-10-sqlite-db-shards-referencing-each-in-a-master-sqlserver-rdbms"},{"level":2,"title":"Code-first Customer & Order example with complex types on POCO as text blobs","slug":"code-first-customer-order-example-with-complex-types-on-poco-as-text-blobs"}],"relativePath":"ormlite/multi-database-connections.md","lastUpdated":1645007721717}',p={},o=t(`__VP_STATIC_START__<p>We now support multiple nested database connections so you can now trivially use OrmLite to access multiple databases on different connections. The <code>OrmLiteConnectionFactory</code> class has been extended to support named connections which allows you to conveniently define all your db connections when you register it in your IOC and access them with the named property when you use them.</p><p>A popular way of scaling RDBMS&#39;s is to create a Master / Shard setup where datasets for queries that span entire system are kept in the master database, whilst context-specific related data can be kept together in an isolated shard. This feature makes it trivial to maintain multiple separate db shards with a master database in a different RDBMS.</p><p>Here&#39;s an (entire source code) sample of the code needed to define, and populate a Master/Shard setup. Sqlite can create DB shards on the fly so only the blank SqlServer master database needed to be created out-of-band:</p><h2 id="sharding-1000-robots-into-10-sqlite-db-shards-referencing-each-in-a-master-sqlserver-rdbms" tabindex="-1">Sharding 1000 Robots into 10 Sqlite DB shards - referencing each in a Master SqlServer RDBMS <a class="header-anchor" href="#sharding-1000-robots-into-10-sqlite-db-shards-referencing-each-in-a-master-sqlserver-rdbms" aria-hidden="true">#</a></h2><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MasterRecord</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Guid</span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> RobotId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> RobotName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> LastActivated <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Robot</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> IsActivated <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">long</span></span> CellCount <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> CreatedDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NoOfShards <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">int</span></span> NoOfRobots <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> dbFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OrmLiteConnectionFactory</span><span class="token punctuation">(</span>
    <span class="token string">&quot;Data Source=host;Initial Catalog=RobotsMaster;Integrated Security=SSPI&quot;</span><span class="token punctuation">,</span>  <span class="token comment">//Connection String</span>
    SqlServerDialect<span class="token punctuation">.</span>Provider<span class="token punctuation">)</span><span class="token punctuation">;</span> 

dbFactory<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>db <span class="token operator">=&gt;</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">CreateTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MasterRecord<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token named-parameter punctuation">overwrite</span><span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

NoOfShards<span class="token punctuation">.</span><span class="token function">Times</span><span class="token punctuation">(</span>i <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">var</span></span> namedShard <span class="token operator">=</span> <span class="token string">&quot;robots-shard&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">;</span>
    dbFactory<span class="token punctuation">.</span><span class="token function">RegisterConnection</span><span class="token punctuation">(</span>namedShard<span class="token punctuation">,</span> 
        <span class="token interpolation-string"><span class="token string">$&quot;~/App_Data/</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">shardId</span><span class="token punctuation">}</span></span><span class="token string">.sqlite&quot;</span></span><span class="token punctuation">.</span><span class="token function">MapAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token comment">//Connection String</span>
        SqliteDialect<span class="token punctuation">.</span>Provider<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	dbFactory<span class="token punctuation">.</span><span class="token function">OpenDbConnection</span><span class="token punctuation">(</span>namedShard<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>db <span class="token operator">=&gt;</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">CreateTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Robot<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token named-parameter punctuation">overwrite</span><span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> newRobots <span class="token operator">=</span> NoOfRobots<span class="token punctuation">.</span><span class="token function">Times</span><span class="token punctuation">(</span>i <span class="token operator">=&gt;</span> <span class="token comment">//Create 1000 Robots</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Robot</span> <span class="token punctuation">{</span> Id<span class="token operator">=</span>i<span class="token punctuation">,</span> Name<span class="token operator">=</span><span class="token string">&quot;R2D&quot;</span><span class="token operator">+</span>i<span class="token punctuation">,</span> CreatedDate<span class="token operator">=</span>DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">,</span> CellCount<span class="token operator">=</span>DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToUnixTimeMs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">100000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> newRobot <span class="token keyword">in</span> newRobots<span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">IDbConnection</span> db <span class="token operator">=</span> dbFactory<span class="token punctuation">.</span><span class="token function">OpenDbConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//Open Connection to Master DB </span>
    <span class="token punctuation">{</span>
        db<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">MasterRecord</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> Guid<span class="token punctuation">.</span><span class="token function">NewGuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> RobotId <span class="token operator">=</span> newRobot<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> RobotName <span class="token operator">=</span> newRobot<span class="token punctuation">.</span>Name <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">IDbConnection</span> robotShard <span class="token operator">=</span> dbFactory<span class="token punctuation">.</span><span class="token function">OpenDbConnection</span><span class="token punctuation">(</span><span class="token string">&quot;robots-shard&quot;</span><span class="token operator">+</span>newRobot<span class="token punctuation">.</span>Id <span class="token operator">%</span> NoOfShards<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//Shard</span>
        <span class="token punctuation">{</span>
            robotShard<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>newRobot<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Using the <a href="https://addons.mozilla.org/en-US/firefox/addon/sqlite-manager/?src=search" target="_blank" rel="noopener noreferrer">SQLite Manager</a> Firefox extension we can peek at one of the created shards to see 100 Robots in each shard. This is the dump of <code>robots-shard0.sqlite</code>:</p><p><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/ormlite/robots-shard0.sqlite.jpg" alt="Data dump of Robot Shard #1"></p><p>As expected each shard has every 10th robot inside.</p><h2 id="code-first-customer-order-example-with-complex-types-on-poco-as-text-blobs" tabindex="-1">Code-first Customer &amp; Order example with complex types on POCO as text blobs <a class="header-anchor" href="#code-first-customer-order-example-with-complex-types-on-poco-as-text-blobs" aria-hidden="true">#</a></h2><p>Below is a complete stand-alone example. No other config or classes is required for it to run. It&#39;s also available as a <a href="https://github.com/ServiceStack/ServiceStack.OrmLite/blob/master/tests/ServiceStack.OrmLite.Tests/UseCase/CustomerOrdersUseCase.cs" target="_blank" rel="noopener noreferrer">stand-alone unit test</a>.</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">PhoneType</span> <span class="token punctuation">{</span>
    Home<span class="token punctuation">,</span>
    Work<span class="token punctuation">,</span>
    Mobile<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">AddressType</span> <span class="token punctuation">{</span>
    Home<span class="token punctuation">,</span>
    Work<span class="token punctuation">,</span>
    Other<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Address</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Line1 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Line2 <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> ZipCode <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> State <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> City <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Country <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Customer</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token function">Customer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>PhoneNumbers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span>PhoneType<span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>Addresses <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span>AddressType<span class="token punctuation">,</span> Address<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoIncrement</span></span><span class="token punctuation">]</span> <span class="token comment">// Creates Auto primary key</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FirstName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> LastName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Index</span><span class="token attribute-arguments"><span class="token punctuation">(</span>Unique <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> <span class="token comment">// Creates Unique Index</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Email <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token return-type class-name">Dictionary<span class="token punctuation">&lt;</span>PhoneType<span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> PhoneNumbers <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token comment">//Blobbed</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">Dictionary<span class="token punctuation">&lt;</span>AddressType<span class="token punctuation">,</span> Address<span class="token punctuation">&gt;</span></span> Addresses <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token comment">//Blobbed</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> CreatedAt <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Order</span> <span class="token punctuation">{</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoIncrement</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">References</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Customer</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>      <span class="token comment">//Creates Foreign Key</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> CustomerId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">References</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Employee</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>      <span class="token comment">//Creates Foreign Key</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> EmployeeId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token return-type class-name">Address</span> ShippingAddress <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment">//Blobbed (no Address table)</span>
    
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> OrderDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> RequiredDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DateTime<span class="token punctuation">?</span></span> ShippedDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> ShipVia <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span></span> Freight <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span></span> Total <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderDetail</span> <span class="token punctuation">{</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">AutoIncrement</span></span><span class="token punctuation">]</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">References</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">Order</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span> <span class="token comment">//Creates Foreign Key</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> OrderId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> ProductId <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span></span> UnitPrice <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">short</span></span> Quantity <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span></span> Discount <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Employee</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Product</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">decimal</span></span> UnitPrice <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//Setup SQL Server Connection Factory</span>
<span class="token class-name"><span class="token keyword">var</span></span> dbFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OrmLiteConnectionFactory</span><span class="token punctuation">(</span>
	<span class="token string">@&quot;Data Source=.\\SQLEXPRESS;AttachDbFilename=|DataDirectory|\\App_Data\\Database1.mdf;Integrated Security=True;User Instance=True&quot;</span><span class="token punctuation">,</span>
	SqlServerDialect<span class="token punctuation">.</span>Provider<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//Use in-memory Sqlite DB instead</span>
<span class="token comment">//var dbFactory = new OrmLiteConnectionFactory(</span>
<span class="token comment">//    &quot;:memory:&quot;, false, SqliteDialect.Provider);</span>

<span class="token comment">//Non-intrusive: All extension methods hang off System.Data.* interfaces</span>
<span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">IDbConnection</span> db <span class="token operator">=</span> Config<span class="token punctuation">.</span><span class="token function">OpenDbConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token comment">//Re-Create all table schemas:</span>
  db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">DropTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>OrderDetail<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">DropTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Order<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">DropTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Customer<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">DropTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Product<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">DropTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Employee<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">CreateTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Employee<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">CreateTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Product<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">CreateTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Customer<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">CreateTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Order<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">CreateTable</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>OrderDetail<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  db<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Employee</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;Employee 1&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Employee</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;Employee 2&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token class-name"><span class="token keyword">var</span></span> product1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Product</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;Product 1&quot;</span><span class="token punctuation">,</span> UnitPrice <span class="token operator">=</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token class-name"><span class="token keyword">var</span></span> product2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Product</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;Product 2&quot;</span><span class="token punctuation">,</span> UnitPrice <span class="token operator">=</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  db<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>product1<span class="token punctuation">,</span> product2<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name"><span class="token keyword">var</span></span> customer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Customer</span> <span class="token punctuation">{</span>
      FirstName <span class="token operator">=</span> <span class="token string">&quot;Orm&quot;</span><span class="token punctuation">,</span>
      LastName <span class="token operator">=</span> <span class="token string">&quot;Lite&quot;</span><span class="token punctuation">,</span>
      Email <span class="token operator">=</span> <span class="token string">&quot;ormlite@servicestack.net&quot;</span><span class="token punctuation">,</span>
      PhoneNumbers <span class="token operator">=</span>
      <span class="token punctuation">{</span>
          <span class="token punctuation">{</span> PhoneType<span class="token punctuation">.</span>Home<span class="token punctuation">,</span> <span class="token string">&quot;555-1234&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span> PhoneType<span class="token punctuation">.</span>Work<span class="token punctuation">,</span> <span class="token string">&quot;1-800-1234&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span> PhoneType<span class="token punctuation">.</span>Mobile<span class="token punctuation">,</span> <span class="token string">&quot;818-123-4567&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      Addresses <span class="token operator">=</span>
      <span class="token punctuation">{</span>
          <span class="token punctuation">{</span> AddressType<span class="token punctuation">.</span>Work<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Address</span> <span class="token punctuation">{</span> 
            Line1 <span class="token operator">=</span> <span class="token string">&quot;1 Street&quot;</span><span class="token punctuation">,</span> Country <span class="token operator">=</span> <span class="token string">&quot;US&quot;</span><span class="token punctuation">,</span> State <span class="token operator">=</span> <span class="token string">&quot;NY&quot;</span><span class="token punctuation">,</span> City <span class="token operator">=</span> <span class="token string">&quot;New York&quot;</span><span class="token punctuation">,</span> ZipCode <span class="token operator">=</span> <span class="token string">&quot;10101&quot;</span> <span class="token punctuation">}</span> 
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      CreatedAt <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token class-name"><span class="token keyword">var</span></span> customerId <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>customer<span class="token punctuation">,</span> <span class="token named-parameter punctuation">selectIdentity</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Get Auto Inserted Id</span>
  customer <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Single</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Customer<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token punctuation">{</span> customer<span class="token punctuation">.</span>Email <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Query</span>
  Assert<span class="token punctuation">.</span><span class="token function">That</span><span class="token punctuation">(</span>customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span> Is<span class="token punctuation">.</span><span class="token function">EqualTo</span><span class="token punctuation">(</span>customerId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//Direct access to System.Data.Transactions:</span>
  <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">IDbTransaction</span> trans <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">OpenTransaction</span><span class="token punctuation">(</span>IsolationLevel<span class="token punctuation">.</span>ReadCommitted<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
      <span class="token class-name"><span class="token keyword">var</span></span> order <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Order</span> <span class="token punctuation">{</span>
          CustomerId <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
          EmployeeId <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
          OrderDate <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">,</span>
          Freight <span class="token operator">=</span> <span class="token number">10.50m</span><span class="token punctuation">,</span>
          ShippingAddress <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Address</span> <span class="token punctuation">{</span> 
            Line1 <span class="token operator">=</span> <span class="token string">&quot;3 Street&quot;</span><span class="token punctuation">,</span> Country <span class="token operator">=</span> <span class="token string">&quot;US&quot;</span><span class="token punctuation">,</span> State <span class="token operator">=</span> <span class="token string">&quot;NY&quot;</span><span class="token punctuation">,</span> City <span class="token operator">=</span> <span class="token string">&quot;New York&quot;</span><span class="token punctuation">,</span> ZipCode <span class="token operator">=</span> <span class="token string">&quot;12121&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      db<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Inserts 1st time</span>

      <span class="token comment">//order.Id populated on Save().</span>

      <span class="token class-name"><span class="token keyword">var</span></span> orderDetails <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
          <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OrderDetail</span> <span class="token punctuation">{</span>
              OrderId <span class="token operator">=</span> order<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
              ProductId <span class="token operator">=</span> product1<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
              Quantity <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
              UnitPrice <span class="token operator">=</span> product1<span class="token punctuation">.</span>UnitPrice<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token keyword">new</span> <span class="token constructor-invocation class-name">OrderDetail</span> <span class="token punctuation">{</span>
              OrderId <span class="token operator">=</span> order<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
              ProductId <span class="token operator">=</span> product2<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
              Quantity <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
              UnitPrice <span class="token operator">=</span> product2<span class="token punctuation">.</span>UnitPrice<span class="token punctuation">,</span>
              Discount <span class="token operator">=</span> <span class="token number">.15m</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>

      db<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>orderDetails<span class="token punctuation">)</span><span class="token punctuation">;</span>

      order<span class="token punctuation">.</span>Total <span class="token operator">=</span> orderDetails<span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>UnitPrice <span class="token operator">*</span> x<span class="token punctuation">.</span>Quantity <span class="token operator">*</span> x<span class="token punctuation">.</span>Discount<span class="token punctuation">)</span> <span class="token operator">+</span> order<span class="token punctuation">.</span>Freight<span class="token punctuation">;</span>

      db<span class="token punctuation">.</span><span class="token function">Save</span><span class="token punctuation">(</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Updates 2nd Time</span>

      trans<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Running this against a SQL Server database will yield the results below:</p><p><a href="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/ormlite/ormlite-example.png" target="_blank" rel="noopener noreferrer"><img src="https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/ormlite/ormlite-example.png" alt="SQL Server Management Studio results"></a></p><p>Notice the POCO types are stored in the <a href="https://github.com/ServiceStackV3/mythz_blog/blob/master/pages/176.md" target="_blank" rel="noopener noreferrer">very fast</a> and <a href="https://github.com/ServiceStackV3/mythz_blog/blob/master/pages/314.md" target="_blank" rel="noopener noreferrer">Versatile</a><a href="https://docs.servicestack.net/jsv-format" target="_blank" rel="noopener noreferrer">JSV Format</a> which although hard to do - is actually more compact, human and parser-friendly than JSON \u{1F603}</p>__VP_STATIC_END__`,14),e=[o];function c(u,l,k,i,r,d){return a(),s("div",null,e)}var w=n(p,[["render",c]]);export{y as __pageData,w as default};
