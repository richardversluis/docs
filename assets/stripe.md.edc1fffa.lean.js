import{_ as t,c as e,o as p,a as s,b as n,e as a}from"./app.64b20f26.js";const q=`{"title":"ServiceStack.Stripe","description":"","frontmatter":{"title":"ServiceStack.Stripe"},"headers":[{"level":2,"title":"Features","slug":"features"},{"level":2,"title":"Install ServiceStack.Stripe","slug":"install-servicestack-stripe"},{"level":3,"title":"ASP .NET Core on .NET Framework","slug":"asp-net-core-on-net-framework"},{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"Open-Ended, Declarative Message-based APIs","slug":"open-ended-declarative-message-based-apis"},{"level":2,"title":"Documentation","slug":"documentation"},{"level":2,"title":"Charges","slug":"charges"},{"level":3,"title":"Creating a new charge (charging a credit card)","slug":"creating-a-new-charge-charging-a-credit-card"},{"level":3,"title":"Retrieving a Charge","slug":"retrieving-a-charge"},{"level":3,"title":"Updating a Charge","slug":"updating-a-charge"},{"level":3,"title":"Refunding a Charge","slug":"refunding-a-charge"},{"level":3,"title":"Capture a charge","slug":"capture-a-charge"},{"level":3,"title":"List all Charges","slug":"list-all-charges"},{"level":2,"title":"Customers","slug":"customers"},{"level":3,"title":"Creating a New Customer","slug":"creating-a-new-customer"},{"level":3,"title":"Creating a New Customer with a Card Token","slug":"creating-a-new-customer-with-a-card-token"},{"level":3,"title":"Retrieving a Customer","slug":"retrieving-a-customer"},{"level":3,"title":"Updating a Customer","slug":"updating-a-customer"},{"level":3,"title":"Deleting a Customer","slug":"deleting-a-customer"},{"level":3,"title":"List all Customers","slug":"list-all-customers"},{"level":2,"title":"Cards","slug":"cards"},{"level":3,"title":"Creating a new card","slug":"creating-a-new-card"},{"level":3,"title":"Retrieving a customer's card","slug":"retrieving-a-customer-s-card"},{"level":3,"title":"Updating a card","slug":"updating-a-card"},{"level":3,"title":"Deleting cards","slug":"deleting-cards"},{"level":3,"title":"Listing cards","slug":"listing-cards"},{"level":2,"title":"Subscriptions","slug":"subscriptions"},{"level":3,"title":"Updating the Customer's Active Subscription","slug":"updating-the-customer-s-active-subscription"},{"level":3,"title":"Canceling a Customer's Subscription","slug":"canceling-a-customer-s-subscription"},{"level":2,"title":"Plans","slug":"plans"},{"level":3,"title":"Creating plans","slug":"creating-plans"},{"level":3,"title":"Retrieving a Plan","slug":"retrieving-a-plan"},{"level":3,"title":"Updating a plan","slug":"updating-a-plan"},{"level":3,"title":"Deleting a plan","slug":"deleting-a-plan"},{"level":3,"title":"List all Plans","slug":"list-all-plans"},{"level":2,"title":"Coupons","slug":"coupons"},{"level":3,"title":"Creating coupons","slug":"creating-coupons"},{"level":3,"title":"Retrieving a Coupon","slug":"retrieving-a-coupon"},{"level":3,"title":"Deleting a coupon","slug":"deleting-a-coupon"},{"level":3,"title":"List all Coupons","slug":"list-all-coupons"},{"level":2,"title":"Discounts","slug":"discounts"},{"level":3,"title":"Deleting a Discount","slug":"deleting-a-discount"},{"level":2,"title":"Invoices","slug":"invoices"},{"level":3,"title":"Retrieving an Invoice","slug":"retrieving-an-invoice"},{"level":3,"title":"Creating an invoice","slug":"creating-an-invoice"},{"level":3,"title":"Paying an invoice","slug":"paying-an-invoice"},{"level":3,"title":"Retrieving a List of Invoices","slug":"retrieving-a-list-of-invoices"},{"level":3,"title":"Retrieving a Customer's Upcoming Invoice","slug":"retrieving-a-customer-s-upcoming-invoice"}],"relativePath":"stripe.md","lastUpdated":1645007721761}`,o={},c=s('',6),r=n("div",{class:"nuget-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-700"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle text-lg text-white"},[n("p",null,[n("code",null,'<PackageReference Include="ServiceStack.Stripe" Version="6.*" />')])])]),n("div",{class:"flex"},[n("div",{class:"bg-sky-500 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),l=n("h3",{id:"asp-net-core-on-net-framework",tabindex:"-1"},[a("ASP .NET Core on .NET Framework "),n("a",{class:"header-anchor",href:"#asp-net-core-on-net-framework","aria-hidden":"true"},"#")],-1),i=n("p",null,[a("To use this library in "),n("a",{href:"http://docs.servicestack.net/templates-corefx",target:"_blank",rel:"noopener noreferrer"},"ASP.NET Core Apps running on the .NET Framework"),a(", install the "),n("strong",null,".NET Standard 2.0"),a(" only NuGet package instead:")],-1),u=n("div",{class:"nuget-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-700"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle text-lg text-white"},[n("p",null,[n("code",null,'<PackageReference Include="ServiceStack.Stripe.Core" Version="6.*" />')])])]),n("div",{class:"flex"},[n("div",{class:"bg-sky-500 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),k=s(`__VP_STATIC_START__<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><p>Requires a <a href="https://manage.stripe.com/register" target="_blank" rel="noopener noreferrer">registered Stripe API Key</a>, e.g:</p><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> gateway <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StripeGateway</span><span class="token punctuation">(</span><span class="token string">&quot;sk_test_23KlmQohLKD4dfmAvxYESZ2z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Request DTO&#39;s are just clean POCO&#39;s with <code>[Route]</code> attributes defined, e.g:</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;/customers/{Id}&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GetStripeCustomer</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IGet</span><span class="token punctuation">,</span> <span class="token class-name">IReturn<span class="token punctuation">&lt;</span>StripeCustomer<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Id <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>The <code>IGet</code> interface marker indicates which HTTP Method Stripe expects, whilst <code>IReturn&lt;StripeCustomer&gt;</code> indicates what Stripe returns. The gateway uses this type information to provide its typed API, e.g:</p><div class="language-csharp"><pre><code><span class="token class-name">StripeCustomer</span> customer <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCustomer</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> customerId <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="async" tabindex="-1">Async <a class="header-anchor" href="#async" aria-hidden="true">#</a></h4><div class="language-csharp"><pre><code><span class="token class-name">StripeCustomer</span> customer <span class="token operator">=</span> <span class="token keyword">await</span> gateway<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCustomer</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> customerId <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>If you prefer, you can use the same <code>gateway.Send()</code> generic method for <strong>all</strong> messages as it is able to make use of the <code>IVerb</code> interface marker to control which HTTP method is used, e.g.</p><div class="language-csharp"><pre><code><span class="token class-name">StripeCustomer</span> customer <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Send</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCustomer</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> customerId <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="async-1" tabindex="-1">Async <a class="header-anchor" href="#async-1" aria-hidden="true">#</a></h4><div class="language-csharp"><pre><code><span class="token class-name">StripeCustomer</span> customer <span class="token operator">=</span> <span class="token keyword">await</span> gateway<span class="token punctuation">.</span><span class="token function">SendAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCustomer</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> customerId <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Both of these calls translates to the <a href="https://stripe.com/docs/api/curl#retrieve_customer" target="_blank" rel="noopener noreferrer">Retrieving a Customer</a> HTTP Request, Example in curl:</p>__VP_STATIC_END__`,14),d=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,[a("curl "),n("a",{href:"https://api.stripe.com/v1/customers/cus_3552jPRgtQeRcK",target:"_blank",rel:"noopener noreferrer"},"https://api.stripe.com/v1/customers/cus_3552jPRgtQeRcK"),a(" -u yDOr26HsxyhpuRB3qbG07qfCmDhqutnA:")])])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),g=s(`__VP_STATIC_START__<h3 id="open-ended-declarative-message-based-apis" tabindex="-1">Open-Ended, Declarative Message-based APIs <a class="header-anchor" href="#open-ended-declarative-message-based-apis" aria-hidden="true">#</a></h3><p>The <code>StripeGateway</code> benefits from an <strong>Open Ended</strong> message-based API where you&#39;re also able to use own Request DTO&#39;s to call new Stripe Services that StripeGateway has no knowledge about. E.g. The only custom code required to implement the <code>ChargeStripeCustomer</code> is this single, clean, declarative Request DTO:</p><div class="language-csharp"><pre><code><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Route</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token string">&quot;/charges&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChargeStripeCustomer</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IPost</span><span class="token punctuation">,</span> <span class="token class-name">IReturn<span class="token punctuation">&lt;</span>StripeCharge<span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> Amount <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Currency <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Customer <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Card <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Description <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">bool</span><span class="token punctuation">?</span></span> Capture <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span><span class="token punctuation">?</span></span> ApplicationFee <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Which contains all the information needed to call the Stripe Service including the <code>/charges</code> relative url, using the <strong>POST</strong> HTTP method and the typed <code>StripeCharge</code> DTO it returns. To charge a Customer the Request DTO can either use the explicit <code>Post/PostAsync</code> or universal <code>Send/SendAsync</code> StripeGateway methods.</p><h2 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-hidden="true">#</a></h2><p>These API examples follows <a href="https://stripe.com/docs/api/" target="_blank" rel="noopener noreferrer">Stripe&#39;s API Documentation</a>.</p><h2 id="charges" tabindex="-1"><a href="https://stripe.com/docs/api/curl#charges" target="_blank" rel="noopener noreferrer">Charges</a> <a class="header-anchor" href="#charges" aria-hidden="true">#</a></h2><h3 id="creating-a-new-charge-charging-a-credit-card" tabindex="-1">Creating a new charge (charging a credit card) <a class="header-anchor" href="#creating-a-new-charge-charging-a-credit-card" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> charge <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ChargeStripeCustomer</span>
<span class="token punctuation">{</span>
    Amount <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span>
    Customer <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    Currency <span class="token operator">=</span> <span class="token string">&quot;usd&quot;</span><span class="token punctuation">,</span>
    Description <span class="token operator">=</span> <span class="token string">&quot;Test Charge Customer&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="async-2" tabindex="-1">Async <a class="header-anchor" href="#async-2" aria-hidden="true">#</a></h4><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> charge <span class="token operator">=</span> <span class="token keyword">await</span> gateway<span class="token punctuation">.</span><span class="token function">PostAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ChargeStripeCustomer</span>
<span class="token punctuation">{</span>
    Amount <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span>
    Customer <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    Currency <span class="token operator">=</span> <span class="token string">&quot;usd&quot;</span><span class="token punctuation">,</span>
    Description <span class="token operator">=</span> <span class="token string">&quot;Test Charge Customer&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="retrieving-a-charge" tabindex="-1">Retrieving a Charge <a class="header-anchor" href="#retrieving-a-charge" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> charge <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCharge</span> <span class="token punctuation">{</span> ChargeId <span class="token operator">=</span> charge<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="updating-a-charge" tabindex="-1">Updating a Charge <a class="header-anchor" href="#updating-a-charge" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> charge <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">UpdateStripeCharge</span> 
<span class="token punctuation">{</span>
    ChargeId <span class="token operator">=</span> charge<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    Description <span class="token operator">=</span> <span class="token string">&quot;Updated Charge Description&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="refunding-a-charge" tabindex="-1">Refunding a Charge <a class="header-anchor" href="#refunding-a-charge" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> refundCharge <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">RefundStripeCharge</span>
<span class="token punctuation">{</span>
    ChargeId <span class="token operator">=</span> charge<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="capture-a-charge" tabindex="-1">Capture a charge <a class="header-anchor" href="#capture-a-charge" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> charge <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ChargeStripeCustomer</span>
<span class="token punctuation">{</span>
    Amount <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span>
    Customer <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    Currency <span class="token operator">=</span> <span class="token string">&quot;usd&quot;</span><span class="token punctuation">,</span>
    Description <span class="token operator">=</span> <span class="token string">&quot;Test Charge Customer&quot;</span><span class="token punctuation">,</span>
    Capture <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">//Don&#39;t capture the charge immediately</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//Can capture charge later with an explicit call</span>
<span class="token class-name"><span class="token keyword">var</span></span> captureCharge <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CaptureStripeCharge</span>
<span class="token punctuation">{</span>
    ChargeId <span class="token operator">=</span> charge<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="list-all-charges" tabindex="-1">List all Charges <a class="header-anchor" href="#list-all-charges" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> charges <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCharges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>List all customer charges</p><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> charges <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCharges</span>
<span class="token punctuation">{</span>
    Customer <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="customers" tabindex="-1"><a href="https://stripe.com/docs/api/curl#customers" target="_blank" rel="noopener noreferrer">Customers</a> <a class="header-anchor" href="#customers" aria-hidden="true">#</a></h2><h3 id="creating-a-new-customer" tabindex="-1">Creating a New Customer <a class="header-anchor" href="#creating-a-new-customer" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> customer <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CreateStripeCustomer</span>
<span class="token punctuation">{</span>
    AccountBalance <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">,</span>
    Card <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StripeCard</span>
    <span class="token punctuation">{</span>
        Name <span class="token operator">=</span> <span class="token string">&quot;Test Card&quot;</span><span class="token punctuation">,</span>
        Number <span class="token operator">=</span> <span class="token string">&quot;4242424242424242&quot;</span><span class="token punctuation">,</span>
        Cvc <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span>
        ExpMonth <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
        ExpYear <span class="token operator">=</span> <span class="token number">2015</span><span class="token punctuation">,</span>
        AddressLine1 <span class="token operator">=</span> <span class="token string">&quot;1 Address Road&quot;</span><span class="token punctuation">,</span>
        AddressLine2 <span class="token operator">=</span> <span class="token string">&quot;12345&quot;</span><span class="token punctuation">,</span>
        AddressZip <span class="token operator">=</span> <span class="token string">&quot;City&quot;</span><span class="token punctuation">,</span>
        AddressState <span class="token operator">=</span> <span class="token string">&quot;NY&quot;</span><span class="token punctuation">,</span>
        AddressCountry <span class="token operator">=</span> <span class="token string">&quot;US&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    Description <span class="token operator">=</span> <span class="token string">&quot;Description&quot;</span><span class="token punctuation">,</span>
    Email <span class="token operator">=</span> <span class="token string">&quot;test@email.com&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="creating-a-new-customer-with-a-card-token" tabindex="-1">Creating a New Customer with a Card Token <a class="header-anchor" href="#creating-a-new-customer-with-a-card-token" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code> <span class="token class-name"><span class="token keyword">var</span></span> cardToken <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CreateStripeToken</span> <span class="token punctuation">{</span>
    Card <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StripeCard</span>
    <span class="token punctuation">{</span>
        Name <span class="token operator">=</span> <span class="token string">&quot;Test Card&quot;</span><span class="token punctuation">,</span>
        Number <span class="token operator">=</span> <span class="token string">&quot;4242424242424242&quot;</span><span class="token punctuation">,</span>
        Cvc <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span>
        ExpMonth <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
        ExpYear <span class="token operator">=</span> <span class="token number">2015</span><span class="token punctuation">,</span>
        AddressLine1 <span class="token operator">=</span> <span class="token string">&quot;1 Address Road&quot;</span><span class="token punctuation">,</span>
        AddressLine2 <span class="token operator">=</span> <span class="token string">&quot;12345&quot;</span><span class="token punctuation">,</span>
        AddressZip <span class="token operator">=</span> <span class="token string">&quot;City&quot;</span><span class="token punctuation">,</span>
        AddressState <span class="token operator">=</span> <span class="token string">&quot;NY&quot;</span><span class="token punctuation">,</span>
        AddressCountry <span class="token operator">=</span> <span class="token string">&quot;US&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> customer <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CreateStripeCustomerWithToken</span>
<span class="token punctuation">{</span>
    AccountBalance <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">,</span>
    Card <span class="token operator">=</span> cardToken<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    Description <span class="token operator">=</span> <span class="token string">&quot;Description&quot;</span><span class="token punctuation">,</span>
    Email <span class="token operator">=</span> <span class="token string">&quot;test@email.com&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="retrieving-a-customer" tabindex="-1">Retrieving a Customer <a class="header-anchor" href="#retrieving-a-customer" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> customer <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCustomer</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> customerId <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="updating-a-customer" tabindex="-1">Updating a Customer <a class="header-anchor" href="#updating-a-customer" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> updatedCustomer <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">UpdateStripeCustomer</span>
<span class="token punctuation">{</span>
    Id <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    Card <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StripeCard</span>
    <span class="token punctuation">{</span>
        Id <span class="token operator">=</span> customer<span class="token punctuation">.</span>Cards<span class="token punctuation">.</span>Data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
        Name <span class="token operator">=</span> <span class="token string">&quot;Updated Test Card&quot;</span><span class="token punctuation">,</span>
        Number <span class="token operator">=</span> <span class="token string">&quot;4242424242424242&quot;</span><span class="token punctuation">,</span>
        Cvc <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span>
        ExpMonth <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
        ExpYear <span class="token operator">=</span> <span class="token number">2015</span><span class="token punctuation">,</span>
        AddressLine1 <span class="token operator">=</span> <span class="token string">&quot;1 Address Road&quot;</span><span class="token punctuation">,</span>
        AddressLine2 <span class="token operator">=</span> <span class="token string">&quot;12345&quot;</span><span class="token punctuation">,</span>
        AddressZip <span class="token operator">=</span> <span class="token string">&quot;City&quot;</span><span class="token punctuation">,</span>
        AddressState <span class="token operator">=</span> <span class="token string">&quot;NY&quot;</span><span class="token punctuation">,</span>
        AddressCountry <span class="token operator">=</span> <span class="token string">&quot;US&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    AccountBalance <span class="token operator">=</span> <span class="token number">20000</span><span class="token punctuation">,</span>
    Description <span class="token operator">=</span> <span class="token string">&quot;Updated Description&quot;</span><span class="token punctuation">,</span>
    Email <span class="token operator">=</span> <span class="token string">&quot;updated@email.com&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="deleting-a-customer" tabindex="-1">Deleting a Customer <a class="header-anchor" href="#deleting-a-customer" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> deletedRef <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DeleteStripeCustomer</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="list-all-customers" tabindex="-1">List all Customers <a class="header-anchor" href="#list-all-customers" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> customers <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCustomers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="cards" tabindex="-1"><a href="https://stripe.com/docs/api/curl#cards" target="_blank" rel="noopener noreferrer">Cards</a> <a class="header-anchor" href="#cards" aria-hidden="true">#</a></h2><h3 id="creating-a-new-card" tabindex="-1">Creating a new card <a class="header-anchor" href="#creating-a-new-card" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> card <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CreateStripeCard</span>
<span class="token punctuation">{</span>
    CustomerId <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    Card <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StripeCard</span>
    <span class="token punctuation">{</span>
        Name <span class="token operator">=</span> <span class="token string">&quot;Test Card 2&quot;</span><span class="token punctuation">,</span>
        Number <span class="token operator">=</span> <span class="token string">&quot;5555555555554444&quot;</span><span class="token punctuation">,</span>
        Cvc <span class="token operator">=</span> <span class="token string">&quot;456&quot;</span><span class="token punctuation">,</span>
        ExpMonth <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
        ExpYear <span class="token operator">=</span> <span class="token number">2016</span><span class="token punctuation">,</span>
        AddressLine1 <span class="token operator">=</span> <span class="token string">&quot;1 Address Road&quot;</span><span class="token punctuation">,</span>
        AddressLine2 <span class="token operator">=</span> <span class="token string">&quot;12345&quot;</span><span class="token punctuation">,</span>
        AddressZip <span class="token operator">=</span> <span class="token string">&quot;City&quot;</span><span class="token punctuation">,</span>
        AddressState <span class="token operator">=</span> <span class="token string">&quot;NY&quot;</span><span class="token punctuation">,</span>
        AddressCountry <span class="token operator">=</span> <span class="token string">&quot;US&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="retrieving-a-customer-s-card" tabindex="-1">Retrieving a customer&#39;s card <a class="header-anchor" href="#retrieving-a-customer-s-card" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> card <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCard</span>
<span class="token punctuation">{</span>
    CustomerId <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    CardId <span class="token operator">=</span> card<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="updating-a-card" tabindex="-1">Updating a card <a class="header-anchor" href="#updating-a-card" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> card <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">UpdateStripeCard</span>
<span class="token punctuation">{</span>
    CustomerId <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    CardId <span class="token operator">=</span> customer<span class="token punctuation">.</span>Cards<span class="token punctuation">.</span>Data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Id<span class="token punctuation">,</span>

    Name <span class="token operator">=</span> <span class="token string">&quot;Test Card Updated&quot;</span><span class="token punctuation">,</span>

    AddressLine1 <span class="token operator">=</span> <span class="token string">&quot;1 Address Updated&quot;</span><span class="token punctuation">,</span>
    AddressLine2 <span class="token operator">=</span> <span class="token string">&quot;45321&quot;</span><span class="token punctuation">,</span>
    AddressZip <span class="token operator">=</span> <span class="token string">&quot;City&quot;</span><span class="token punctuation">,</span>
    AddressState <span class="token operator">=</span> <span class="token string">&quot;NY&quot;</span><span class="token punctuation">,</span>
    AddressCountry <span class="token operator">=</span> <span class="token string">&quot;US&quot;</span><span class="token punctuation">,</span>

    ExpMonth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
    ExpYear <span class="token operator">=</span> <span class="token number">2030</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="deleting-cards" tabindex="-1">Deleting cards <a class="header-anchor" href="#deleting-cards" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> deletedRef <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DeleteStripeCard</span>
<span class="token punctuation">{</span>
    CustomerId <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    CardId <span class="token operator">=</span> customer<span class="token punctuation">.</span>Cards<span class="token punctuation">.</span>Data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="listing-cards" tabindex="-1">Listing cards <a class="header-anchor" href="#listing-cards" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> cards <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCustomerCards</span> <span class="token punctuation">{</span> CustomerId <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="subscriptions" tabindex="-1"><a href="https://stripe.com/docs/api/curl#subscriptions" target="_blank" rel="noopener noreferrer">Subscriptions</a> <a class="header-anchor" href="#subscriptions" aria-hidden="true">#</a></h2><h3 id="updating-the-customer-s-active-subscription" tabindex="-1">Updating the Customer&#39;s Active Subscription <a class="header-anchor" href="#updating-the-customer-s-active-subscription" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> subscription <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">SubscribeStripeCustomer</span>
<span class="token punctuation">{</span>
    CustomerId <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    Plan <span class="token operator">=</span> plan<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    Coupon <span class="token operator">=</span> coupon<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    Quantity <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="canceling-a-customer-s-subscription" tabindex="-1">Canceling a Customer&#39;s Subscription <a class="header-anchor" href="#canceling-a-customer-s-subscription" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> cancelled <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CancelStripeSubscription</span>
<span class="token punctuation">{</span>
    CustomerId <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
    AtPeriodEnd <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="plans" tabindex="-1"><a href="https://stripe.com/docs/api/curl#plans" target="_blank" rel="noopener noreferrer">Plans</a> <a class="header-anchor" href="#plans" aria-hidden="true">#</a></h2><h3 id="creating-plans" tabindex="-1">Creating plans <a class="header-anchor" href="#creating-plans" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> plan <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CreateStripePlan</span>
<span class="token punctuation">{</span>
    Id <span class="token operator">=</span> <span class="token string">&quot;TEST-PLAN-01&quot;</span><span class="token punctuation">,</span>
    Amount <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">,</span>
    Currency <span class="token operator">=</span> <span class="token string">&quot;usd&quot;</span><span class="token punctuation">,</span>
    Name <span class="token operator">=</span> <span class="token string">&quot;Test Plan&quot;</span><span class="token punctuation">,</span>
    Interval <span class="token operator">=</span> StripePlanInterval<span class="token punctuation">.</span>month<span class="token punctuation">,</span>
    IntervalCount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="retrieving-a-plan" tabindex="-1">Retrieving a Plan <a class="header-anchor" href="#retrieving-a-plan" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> plan <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripePlan</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> plan<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><h3 id="updating-a-plan" tabindex="-1">Updating a plan <a class="header-anchor" href="#updating-a-plan" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> updatedPlan <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">UpdateStripePlan</span>
<span class="token punctuation">{</span>
    Id <span class="token operator">=</span> <span class="token string">&quot;TEST-PLAN-01&quot;</span><span class="token punctuation">,</span>
    Name <span class="token operator">=</span> <span class="token string">&quot;NEW PLAN UPDATED!&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="deleting-a-plan" tabindex="-1">Deleting a plan <a class="header-anchor" href="#deleting-a-plan" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token return-type class-name"><span class="token keyword">var</span></span> gateway<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DeleteStripePlan</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> plan<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="list-all-plans" tabindex="-1">List all Plans <a class="header-anchor" href="#list-all-plans" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> plans <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripePlans</span> <span class="token punctuation">{</span> Count <span class="token operator">=</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="coupons" tabindex="-1"><a href="https://stripe.com/docs/api/curl#coupons" target="_blank" rel="noopener noreferrer">Coupons</a> <a class="header-anchor" href="#coupons" aria-hidden="true">#</a></h2><h3 id="creating-coupons" tabindex="-1">Creating coupons <a class="header-anchor" href="#creating-coupons" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> coupon <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CreateStripeCoupon</span>
<span class="token punctuation">{</span>
    Id <span class="token operator">=</span> <span class="token string">&quot;TEST-COUPON-01&quot;</span><span class="token punctuation">,</span>
    Duration <span class="token operator">=</span> StripeCouponDuration<span class="token punctuation">.</span>repeating<span class="token punctuation">,</span>
    PercentOff <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span>
    Currency <span class="token operator">=</span> <span class="token string">&quot;usd&quot;</span><span class="token punctuation">,</span>
    DurationInMonths <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
    RedeemBy <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">.</span><span class="token function">AddYears</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    MaxRedemptions <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="retrieving-a-coupon" tabindex="-1">Retrieving a Coupon <a class="header-anchor" href="#retrieving-a-coupon" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> coupon <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCoupon</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> coupon<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="deleting-a-coupon" tabindex="-1">Deleting a coupon <a class="header-anchor" href="#deleting-a-coupon" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> deletedRef <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DeleteStripeCoupon</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> plan<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="list-all-coupons" tabindex="-1">List all Coupons <a class="header-anchor" href="#list-all-coupons" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> coupons <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeCoupons</span> <span class="token punctuation">{</span> Count <span class="token operator">=</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="discounts" tabindex="-1"><a href="https://stripe.com/docs/api/curl#discounts" target="_blank" rel="noopener noreferrer">Discounts</a> <a class="header-anchor" href="#discounts" aria-hidden="true">#</a></h2><h3 id="deleting-a-discount" tabindex="-1">Deleting a Discount <a class="header-anchor" href="#deleting-a-discount" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> deletedRef <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">DeleteStripeDiscount</span> <span class="token punctuation">{</span> CustomerId <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="invoices" tabindex="-1"><a href="https://stripe.com/docs/api/curl#invoices" target="_blank" rel="noopener noreferrer">Invoices</a> <a class="header-anchor" href="#invoices" aria-hidden="true">#</a></h2><h3 id="retrieving-an-invoice" tabindex="-1">Retrieving an Invoice <a class="header-anchor" href="#retrieving-an-invoice" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> invoice <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeInvoice</span> <span class="token punctuation">{</span> Id <span class="token operator">=</span> invoice<span class="token punctuation">.</span>Id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="creating-an-invoice" tabindex="-1">Creating an invoice <a class="header-anchor" href="#creating-an-invoice" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> stripeInvoice <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">CreateStripeInvoice</span>
<span class="token punctuation">{</span>
    Customer <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="paying-an-invoice" tabindex="-1">Paying an invoice <a class="header-anchor" href="#paying-an-invoice" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> paidInvoice <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">PayStripeInvoice</span>
<span class="token punctuation">{</span>
    Id <span class="token operator">=</span> invoice<span class="token punctuation">.</span>Id
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="retrieving-a-list-of-invoices" tabindex="-1">Retrieving a List of Invoices <a class="header-anchor" href="#retrieving-a-list-of-invoices" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> invoices <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeInvoices</span> <span class="token punctuation">{</span> Count <span class="token operator">=</span> <span class="token number">20</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Get a list of customer invoices</p><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> invoices <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetStripeInvoices</span> 
<span class="token punctuation">{</span> 
    Customer <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="retrieving-a-customer-s-upcoming-invoice" tabindex="-1">Retrieving a Customer&#39;s Upcoming Invoice <a class="header-anchor" href="#retrieving-a-customer-s-upcoming-invoice" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> upcomingInvoice <span class="token operator">=</span> gateway<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">GetUpcomingStripeInvoice</span>
<span class="token punctuation">{</span>
    Customer <span class="token operator">=</span> customer<span class="token punctuation">.</span>Id<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>__VP_STATIC_END__`,88),h=[c,r,l,i,u,k,d,g];function m(v,w,y,f,C,b){return p(),e("div",null,h)}var I=t(o,[["render",m]]);export{q as __pageData,I as default};
