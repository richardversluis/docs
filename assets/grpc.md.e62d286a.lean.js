import{_ as s,c as t,o as a,b as n,e}from"./app.64b20f26.js";var o="/assets/grpc-horizontal-color.24aa4d70.svg";const It=`{"title":"ServiceStack gRPC","description":"","frontmatter":{"slug":"grpc","title":"ServiceStack gRPC"},"headers":[{"level":3,"title":"Getting Started","slug":"getting-started"},{"level":3,"title":"ServiceStack Services are gRPC Services","slug":"servicestack-services-are-grpc-services"},{"level":3,"title":"Enable gRPC Services in existing .NET Core 3 projects","slug":"enable-grpc-services-in-existing-net-core-3-projects"},{"level":2,"title":"Advantages of ServiceStack gRPC","slug":"advantages-of-servicestack-grpc"},{"level":3,"title":"Maximize reuse of Knowledge and Investments","slug":"maximize-reuse-of-knowledge-and-investments"},{"level":2,"title":"gRPC code-first Development","slug":"grpc-code-first-development"},{"level":3,"title":"Code-First gRPC Services","slug":"code-first-grpc-services"},{"level":3,"title":"Flattened Request Hierarchy's","slug":"flattened-request-hierarchy-s"},{"level":3,"title":"No additional complexity or artificial machinery","slug":"no-additional-complexity-or-artificial-machinery"},{"level":3,"title":"Smart, Substitutable, Generic GrpcServiceClient","slug":"smart-substitutable-generic-grpcserviceclient"},{"level":3,"title":"Preserve rich Semantics and API Design","slug":"preserve-rich-semantics-and-api-design"},{"level":3,"title":"Offer best API for every platform","slug":"offer-best-api-for-every-platform"},{"level":2,"title":"Architecture","slug":"architecture"},{"level":2,"title":"Limitations","slug":"limitations"},{"level":3,"title":"Inheritance","slug":"inheritance"},{"level":2,"title":"Features","slug":"features"},{"level":3,"title":"protobuf-net Inheritance","slug":"protobuf-net-inheritance"},{"level":3,"title":"Dynamic gRPC Requests","slug":"dynamic-grpc-requests"},{"level":3,"title":"Simulate HTTP Requests","slug":"simulate-http-requests"},{"level":3,"title":"Server Stream gRPC Services","slug":"server-stream-grpc-services"},{"level":3,"title":"Implementing Server Stream Services","slug":"implementing-server-stream-services"},{"level":2,"title":"SSL Certificate Configuration","slug":"ssl-certificate-configuration"},{"level":2,"title":"gRPC Clients","slug":"grpc-clients"},{"level":3,"title":"protoc generated clients","slug":"protoc-generated-clients"},{"level":2,"title":"gRPC Web","slug":"grpc-web"},{"level":3,"title":"x dotnet tool gRPC Web support","slug":"x-dotnet-tool-grpc-web-support"},{"level":2,"title":"gRPC Configuration","slug":"grpc-configuration"},{"level":3,"title":"Protobuf Serialization","slug":"protobuf-serialization"},{"level":3,"title":"Any Methods","slug":"any-methods"},{"level":3,"title":"Custom gRPC Status Codes","slug":"custom-grpc-status-codes"},{"level":3,"title":"Filtered HTTP Headers","slug":"filtered-http-headers"},{"level":3,"title":"Proto Options","slug":"proto-options"},{"level":2,"title":"Public gRPC protoc Service and UI","slug":"public-grpc-protoc-service-and-ui"},{"level":3,"title":"grpc.servicestack.net","slug":"grpc-servicestack-net"},{"level":3,"title":"From .proto descriptors","slug":"from-proto-descriptors"},{"level":3,"title":"Using curl","slug":"using-curl"}],"relativePath":"grpc.md","lastUpdated":1645007720873}`,c={},l=n("p",null,[n("a",{href:"https://grpc.io"},[n("img",{src:o,style:{height:"250px"},alt:"gRPC Logo"})])],-1),r=n("p",null,[e("ServiceStack's gRPC support enables a highly productive development environment for developing high-performance gRPC HTTP/2 Services by making ServiceStack's existing typed Services available from "),n("a",{href:"http://ASP.NET",target:"_blank",rel:"noopener noreferrer"},"ASP.NET"),e("'s gRPC endpoints. In addition to offering superior value in developing gRPC Services on the Server, ServiceStack also offers a "),n("a",{href:"https://todoworld.servicestack.net",target:"_blank",rel:"noopener noreferrer"},"simplified development model for gRPC Clients"),e(" for streamlined end-to-end productivity.")],-1),i=n("iframe",{width:"896",height:"525",src:"https://www.youtube.com/embed/UQlYodNS1xc",frameborder:"0",allow:"autoplay; encrypted-media",allowfullscreen:""},null,-1),p=n("h3",{id:"getting-started",tabindex:"-1"},[e("Getting Started "),n("a",{class:"header-anchor",href:"#getting-started","aria-hidden":"true"},"#")],-1),u=n("p",null,[e("The easiest way to get started is to start from a new "),n("a",{href:"https://github.com/NetCoreTemplates/grpc",target:"_blank",rel:"noopener noreferrer"},"grpc"),e(" template that's a copy of the empty "),n("a",{href:"https://github.com/NetCoreTemplates/web",target:"_blank",rel:"noopener noreferrer"},"web"),e(" project template pre-configured with gRPC support:")],-1),d=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"x new grpc MyGrpcProject")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),k=n("h3",{id:"servicestack-services-are-grpc-services",tabindex:"-1"},[e("ServiceStack Services are gRPC Services "),n("a",{class:"header-anchor",href:"#servicestack-services-are-grpc-services","aria-hidden":"true"},"#")],-1),h=n("p",null,[e("Whilst Protocol Buffers imposes "),n("a",{href:"/grpc#limitations"},"additional restrictions"),e(" on the Types that can be returned, in general the only change to ServiceStack Services following our "),n("a",{href:"/api-design"},"recommended API Design"),e(" are to add .NET's "),n("code",null,"[DataContract]"),e(" and "),n("code",null,"[DataMember]"),e(" attributes on each DTO member assigning unique field index to each property, i.e. what's required to support existing "),n("a",{href:"/protobuf-format"},"ProtoBuf Services"),e(" or used to customize XML wire format in ServiceStack's XML or "),n("a",{href:"/soap-support"},"SOAP Services"),e(".")],-1),g=n("p",null,[e("For an example, here's the complete annotated "),n("code",null,"GetTodos"),e(" Service from "),n("a",{href:"https://github.com/NetCoreApps/todo-world",target:"_blank",rel:"noopener noreferrer"},"todo-world"),e(" gRPC Service:")],-1),m=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataContract")]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"GetTodos"),e(),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},[e("IReturn"),n("span",{class:"token punctuation"},"<"),e("GetTodosResponse"),n("span",{class:"token punctuation"},">")])]),e(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),e(`

`),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataContract")]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"GetTodosResponse"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("Order "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[e("List"),n("span",{class:"token punctuation"},"<"),e("Todo"),n("span",{class:"token punctuation"},">")]),e(" Results "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`

    `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("Order "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},"ResponseStatus"),e(" ResponseStatus "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`

`),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataContract")]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"Todo"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("Order "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"long")]),e(" Id "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`

    `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("Order "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),e(" Title "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`

    `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("Order "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"int")]),e(" Order "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`

    `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("Order "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"bool")]),e(" Completed "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`

`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"TodoServices"),e(),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},"Service")]),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"static"),e(),n("span",{class:"token return-type class-name"},[e("List"),n("span",{class:"token punctuation"},"<"),e("Todo"),n("span",{class:"token punctuation"},">")]),e(" Todos "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},[e("List"),n("span",{class:"token punctuation"},"<"),e("Todo"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"object")]),e(),n("span",{class:"token function"},"Get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"GetTodos"),e(" request"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token operator"},"=>"),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GetTodosResponse"),e(),n("span",{class:"token punctuation"},"{"),e(" Results "),n("span",{class:"token operator"},"="),e(" Todos "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),f=n("p",null,[e("As gRPC mandates a static service contract (i.e. only returns the same Response DTO Type) Request DTOs are required to adhere to ServiceStack best practices and be annotated with either "),n("code",null,"IReturn<TResponse>"),e(" or "),n("code",null,"IReturnVoid"),e(" interfaces.")],-1),v=n("div",{class:"info custom-block"},[n("p",{class:"custom-block-title"},"INFO"),n("p",null,[e("Only services annotated with "),n("code",null,"IReturn*"),e(" interfaces and member indexes (as above) will be registered as gRPC Services")])],-1),y=n("p",null,"Trying to call a Service without these annotations will result in an error that the Service you're trying to call doesn't exist.",-1),w=n("h3",{id:"enable-grpc-services-in-existing-net-core-3-projects",tabindex:"-1"},[e("Enable gRPC Services in existing .NET Core 3 projects "),n("a",{class:"header-anchor",href:"#enable-grpc-services-in-existing-net-core-3-projects","aria-hidden":"true"},"#")],-1),b=n("p",null,[e("By default this Service is available in "),n("a",{href:"/formats"},"all of ServiceStack's supported formats"),e(", to also make it available via "),n("a",{href:"http://ASP.NET",target:"_blank",rel:"noopener noreferrer"},"ASP.NET"),e(" Core's gRPC Endpoints you can "),n("a",{href:"/mix-tool"},"mix it"),e(" into "),n("a",{href:"/modular-startup"},"Modular Startup"),e(" projects with:")],-1),_=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"x mix grpc")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),S=n("p",null,[e("Which applies this "),n("a",{href:"https://gist.github.com/gistlyn/656c29a7257dc374d22d4aa709ba7244",target:"_blank",rel:"noopener noreferrer"},"modular ConfigureGrpc configuration"),e(" to your project.")],-1),C=n("p",null,[e("Or to manually configure gRPC support, add a reference to the .NET Core 3 "),n("strong",null,"ServiceStack.Extensions"),e(" NuGet package:")],-1),P=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet add package ServiceStack.Extensions")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),T=n("p",null,"Add the necessary dependencies:",-1),x=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"void")]),e(),n("span",{class:"token function"},"Configure"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"IServiceCollection"),e(" services"),n("span",{class:"token punctuation"},")"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    services`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AddServiceStackGrpc"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),R=n("p",null,[e("Then register the "),n("code",null,"GrpcFeature"),e(" Plugin in your "),n("code",null,"AppHost"),e(":")],-1),A=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GrpcFeature"),n("span",{class:"token punctuation"},"("),e("App"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),q=n("p",null,[e("Which registers all applicable ServiceStack Services with "),n("a",{href:"http://ASP.NET",target:"_blank",rel:"noopener noreferrer"},"ASP.NET"),e(" Core's gRPC Endpoint and provides an auto-generated "),n("a",{href:"/add-servicestack-reference"},"Add ServiceStack Reference"),e(),n("code",null,"/types/proto"),e(" metadata endpoint that Google's protoc generated clients can use to generate typed client proxies in each of the languages Google's gRPC supports.")],-1),D=n("h2",{id:"advantages-of-servicestack-grpc",tabindex:"-1"},[e("Advantages of ServiceStack gRPC "),n("a",{class:"header-anchor",href:"#advantages-of-servicestack-grpc","aria-hidden":"true"},"#")],-1),I=n("p",null,[e("ServiceStack's code-first message-based development approach offers a number of advantages over most gRPC Service frameworks which rely on manually maintaining a separate plain-text "),n("code",null,".proto"),e(" IDL files for defining your gRPC Services and reliance on external tooling and binding to foreign code-generated classes.")],-1),G=n("p",null,[e("With ServiceStack gRPC, there's no additional complexity, no manual maintenance of "),n("code",null,".proto"),e(" files, no reliance on external tooling, code-gen, etc is required to maintain its simple code-first development model utilizing clean POCOs which is still able to retain its ideal end-to-end Typed API utilizing smart, rich .NET generic Service Clients:")],-1),E=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},"//IRestServiceClient client = new JsonServiceClient(BaseUrl);"),e(`
`),n("span",{class:"token class-name"},"IRestServiceClient"),e(" client "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GrpcServiceClient"),n("span",{class:"token punctuation"},"("),e("BaseUrl"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" response "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"await"),e(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GetTodos"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),N=n("p",null,[e("Like other "),n("a",{href:"/csharp-client#built-in-clients"},".NET Service Clients"),e(", "),n("code",null,"GrpcServiceClient"),e(" is a substitutable full-featured Service Client should consumers prefer to revert to using other more versatile, interoperable, debuggable and ubiquitous serialization formats.")],-1),O=n("h3",{id:"maximize-reuse-of-knowledge-and-investments",tabindex:"-1"},[e("Maximize reuse of Knowledge and Investments "),n("a",{class:"header-anchor",href:"#maximize-reuse-of-knowledge-and-investments","aria-hidden":"true"},"#")],-1),j=n("p",null,[e("Likely the biggest advantage in using ServiceStack to develop gRPC Services is being able to (without additional knowledge) leverage your existing investments and knowledge of building HTTP Services which in most cases (after applying above annotations) are automatically made available as gRPC Services. This maximizes utility of your Services which can be simultaneously made available via "),n("a",{href:"http://ASP.NET",target:"_blank",rel:"noopener noreferrer"},"ASP.NET"),e("'s gRPC Endpoints and ServiceStack's HTTP and MQ Endpoints alleviating the need to fork or duplicate your Services logic across multiple implementations, or worse, taking the leap to develop gRPC-only services and shutting out clients and environments that can't make use of gRPC HTTP/2 endpoints.")],-1),H=n("p",null,[e("ServiceStack enables the best of both worlds, you can take the risk-free step of making your Services available via highly efficient and performant gRPC HTTP/2 Services for clients and environments that can take advantage of it whilst (in the same App) continuing to make them available via the ubiquitous JSON HTTP/1.1 APIs or in any of their "),n("a",{href:"/formats"},"preferred formats"),e(".")],-1),M=n("h2",{id:"grpc-code-first-development",tabindex:"-1"},[e("gRPC code-first Development "),n("a",{class:"header-anchor",href:"#grpc-code-first-development","aria-hidden":"true"},"#")],-1),F=n("p",null,[e("By allowing the use of idiomatic C# POCOs to define your Services contract, code-first always enables a superior development experience which avoids having to rely on external build tools to generate foreign implementation-encumbered types limited in capability by what's generated by its opaque tooling where it emits single-purpose Types limited for usage in gRPC Services - restricted to the lowest common denominator capabilities of "),n("code",null,".proto"),e(" files.")],-1),B=n("p",null,[e("By contrast with a code-first approach your idiomatic C# POCOs remain the master authority for your Services contract in which you retain full control over, that can be further enhanced with attributes to enlist declarative behavior and shared interfaces and are in general inherently easier to develop genericized behavior around. As "),n("a",{href:"/physical-project-structure#servicemodel-project"},"Service Models"),e(" doesn't have any implementation dependencies they can be easily shared and "),n("a",{href:"/why-servicestack#target-multiple-platforms"},"referenced in any .NET Project"),e(" and as clean POCOs they can serve as "),n("a",{href:"/service-complexity-and-dto-roles#the-simple-poco-life"},"multi-purpose models enabling maximum reuse"),e(" where they can be utilized in all ServiceStack's POCO libraries as well being supported in "),n("a",{href:"/formats"},"all of ServiceStack's supported formats"),e(".")],-1),z=n("h3",{id:"code-first-grpc-services",tabindex:"-1"},[e("Code-First gRPC Services "),n("a",{class:"header-anchor",href:"#code-first-grpc-services","aria-hidden":"true"},"#")],-1),V=n("p",null,[e("ServiceStack's code-first gRPC Services enabled by "),n("a",{href:"https://github.com/protobuf-net/protobuf-net.Grpc",target:"_blank",rel:"noopener noreferrer"},"protobuf-net.Grpc"),e(" where instead of imposing the high maintenance burden of manually authoring "),n("code",null,".proto"),e(" to define gRPC Services on the developer and resulting in awkward generated classes in both the C# Service implementation as well as the protoc generated clients.")],-1),Q=n("p",null,"A code-first development approach allows use of the higher-level & more expressive power of C# & its rich static analysis to intuitively declare exactly the Service you want to provide.",-1),L=n("p",null,[e("E.g. an "),n("a",{href:"/autoquery-rdbms"},"AutoQuery Service"),e(" uses both inheritance and generic response Types is simply declared in a single C# Request DTO with exactly what querying features you want to be discoverable for this Service:")],-1),W=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"QueryCategory"),e(),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},[e("QueryDb"),n("span",{class:"token punctuation"},"<"),e("Category"),n("span",{class:"token punctuation"},">")])]),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"int")]),e(" Id "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),e(" CategoryName "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),U=n("p",null,[e("Which you could call in an end-to-end API without code-gen, using the smart "),n("a",{href:"/grpc-generic"},"C# Generic gRPC Service Client"),e(" which supports protobuf-net high-level retrofitted support for both inheritance and generic responses:")],-1),J=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" response "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"await"),e(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"QueryCategory"),e(),n("span",{class:"token punctuation"},"{"),e(" CategoryName "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},'"Vegetables"'),e(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),$=n("p",null,[e("But as "),n("code",null,".proto"),e(" doesn't natively support either inheritance or generic classes the proto clients generates an unusable and awkward "),n("strong",null,"has"),e(" vs "),n("strong",null,"is a"),e(" base for the retrofitted inheritance message hack requiring every base message type to define every possible subtype message. The pursuit of a better dev UX inspired the creation of the "),n("a",{href:"/grpc#dynamic-grpc-requests"},"Dynamic gRPC Requests"),e(" feature, enabling the more natural and UX-friendly way to invoke Services using a flattened unstructured string Dictionary, akin to a "),n("code",null,"?QueryString"),e(" in HTTP Requests:")],-1),X=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" response "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"await"),e(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetDynamicQueryCategoryAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"DynamicRequest"),e(),n("span",{class:"token punctuation"},"{"),e(`
    Params `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token string"},'"CategoryName"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"Vegetables"'),e(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),e(` 
        `),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token string"},'"OrderBy"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"Id"'),e(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),e(` 
        `),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token string"},'"Include"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"Total"'),e(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),K=n("p",null,[e("This feature also allows you to construct a generic "),n("code",null,"DynamicRequest"),e(" Request Message that can invoke any Service making it useful in scenarios where you want to dynamically construct & invoke different Services like in a Request Query Builder as done in "),n("a",{href:"/studio"},"Studio"),e(" and "),n("a",{href:"https://sharpscript.net/sharp-apps/sharpdata",target:"_blank",rel:"noopener noreferrer"},"SharpData"),e(" UIs. s")],-1),Y=n("h3",{id:"flattened-request-hierarchy-s",tabindex:"-1"},[e("Flattened Request Hierarchy's "),n("a",{class:"header-anchor",href:"#flattened-request-hierarchy-s","aria-hidden":"true"},"#")],-1),Z=n("p",null,[e("To improve support for "),n("a",{href:"/grpc#public-grpc-protoc-service-and-ui"},"protoc generated Service Clients"),e(" Request DTOs automatically flatten multiple inheritance hierarchy's into a single message type in the dynamically generated "),n("code",null,".proto"),e(" gRPC Services description so the C# "),n("code",null,"QueryCategory"),e(" Service above will elide the inheritance tree and expose it as a flattened Service message containing both implicit base functionality available to all AutoQuery Services in combination with the explicit Querying functionality specific for each AutoQuery Service.")],-1),nn=n("p",null,[e("So the above "),n("code",null,"QueryCategory"),e(" AutoQuery Service above are defined in the generated gRPC "),n("code",null,".proto"),e(" as:")],-1),en=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token return-type class-name"},"service"),e(" GrpcServices "),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token return-type class-name"},"rpc"),e(),n("span",{class:"token function"},"GetQueryCategory"),n("span",{class:"token punctuation"},"("),e("QueryCategory"),n("span",{class:"token punctuation"},")"),e(" returns "),n("span",{class:"token punctuation"},"("),e("QueryResponse_Category"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`

`),n("span",{class:"token return-type class-name"},"message"),e(" QueryCategory "),n("span",{class:"token punctuation"},"{"),e(`
   `),n("span",{class:"token class-name"},"int32"),e(" Skip "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),e(`
   `),n("span",{class:"token class-name"},"int32"),e(" Take "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),e(`
   `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),e(" OrderBy "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},";"),e(`
   `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),e(" OrderByDesc "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},";"),e(`
   `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),e(" Include "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},";"),e(`
   `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),e(" Fields "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},";"),e(`
   `),n("span",{class:"token class-name"},[e("map"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},","),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},">")]),e(" Meta "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},";"),e(`
   `),n("span",{class:"token class-name"},"int64"),e(" Id "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"201"),n("span",{class:"token punctuation"},";"),e(`
   `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"string")]),e(" CategoryName "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"202"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`

`),n("span",{class:"token return-type class-name"},"message"),e(" QueryResponse_Category "),n("span",{class:"token punctuation"},"{"),e(`
   `),n("span",{class:"token class-name"},"int32"),e(" Offset "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),e(`
   `),n("span",{class:"token class-name"},"int32"),e(" Total "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),e(`
   repeated `),n("span",{class:"token class-name"},"Category"),e(" Results "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},";"),e(`
   `),n("span",{class:"token class-name"},[e("map"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},","),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},">")]),e(" Meta "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},";"),e(`
   `),n("span",{class:"token class-name"},"ResponseStatus"),e(" ResponseStatus "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),sn=n("p",null,"This enables protoc generated clients with the more optimal generated typed API for calling ServiceStack's AutoQuery Services down to:",-1),tn=n("div",{class:"language-dart"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},"// Dart"),e(`
`),n("span",{class:"token keyword"},"var"),e(" response "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"await"),e(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getQueryCategory"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"QueryCategory"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),e("categoryName"),n("span",{class:"token operator"},"="),n("span",{class:"token string"},"'Vegetables'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token function"},"print"),n("span",{class:"token punctuation"},"("),e("response"),n("span",{class:"token punctuation"},"."),e("results"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),an=n("h3",{id:"no-additional-complexity-or-artificial-machinery",tabindex:"-1"},[e("No additional complexity or artificial machinery "),n("a",{class:"header-anchor",href:"#no-additional-complexity-or-artificial-machinery","aria-hidden":"true"},"#")],-1),on=n("p",null,[e("At its most productive usage in .NET Apps, ServiceStack offers the same highly-productive friction-free development experience that's enjoyed in its other "),n("a",{href:"/csharp-client"},".NET Generic Service Clients"),e(" - requiring no tooling, code-generation or any other artificial machinery, as the same clean POCO DTOs used to define your Services can be reused on the client where by preserving any additional annotations or interfaces that can allow for a richer client development experience.")],-1),cn=n("p",null,[e("An alternative to sharing your "),n("strong",null,"ServiceModel.dll"),e(" with .NET clients is for them to use "),n("a",{href:"/add-servicestack-reference"},"Add ServiceStack Reference"),e(" to generate .NET DTOs locally which they can easily do using the "),n("a",{href:"/dotnet-tool"},"x dotnet tool"),e(", e.g:")],-1),ln=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,[e("x csharp "),n("a",{href:"https://todoworld.servicestack.net",target:"_blank",rel:"noopener noreferrer"},"https://todoworld.servicestack.net")])])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),rn=n("p",null,[e("This offers the same behavior as sharing "),n("strong",null,"ServiceModel.dll"),e(" binary where they can be used in any "),n("a",{href:"/csharp-client#built-in-clients"},".NET Generic Service Client"),e(", but also allows for clients to "),n("a",{href:"/csharp-add-servicestack-reference#dto-customization-options"},"customize DTO generation"),e(" to suit their own preferences.")],-1),pn=n("h3",{id:"smart-substitutable-generic-grpcserviceclient",tabindex:"-1"},[e("Smart, Substitutable, Generic GrpcServiceClient "),n("a",{class:"header-anchor",href:"#smart-substitutable-generic-grpcserviceclient","aria-hidden":"true"},"#")],-1),un=n("p",null,[e("Despite requiring much less complexity, the use of a generic Service Client offers a superior development model then what's available in Google's "),n("code",null,"protoc"),e(" generated Service Clients that's also able to be enjoyed by "),n("a",{href:"http://VB.NET",target:"_blank",rel:"noopener noreferrer"},"VB.NET"),e(" and F# App developers for whom previously there was no planned gRPC support.")],-1),dn=n("p",null,[e("The new "),n("code",null,"GrpcServiceClient"),e(" can be used in "),n("strong",null,".NET Standard 2.1"),e(" and "),n("strong",null,".NET Core 3"),e(" .NET Clients by adding a reference to:")],-1),kn=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,"dotnet add package ServiceStack.GrpcClient")])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),hn=n("p",null,[e("This is a full-featured generic Service Client that provides a nicer and cleaner API than what's possible with "),n("code",null,"protoc"),e(" generated clients and contains most of the built-in functionality of other "),n("a",{href:"/csharp-client"},"C#/.NET Typed Generic Clients"),e(", namely:")],-1),gn=n("ul",null,[n("li",null,[e("Substitutable "),n("code",null,"IRestServiceClient"),e(", "),n("code",null,"IServiceClientAsync"),e(" and "),n("code",null,"IServiceClientSync"),e(" interfaces")]),n("li",null,[n("a",{href:"/validation"},"Rich Detailed and Structured"),e(" Typed Exceptions")]),n("li",null,[e("Built-in Credentials, JWT, API Key and Session Authentication "),n("ul",null,[n("li",null,"Transparent auto retry on expired JWT Bearer Tokens after retrieving new JWT from configured Refresh Token")])]),n("li",null,[e("Auto populates Version/Auth info in "),n("code",null,"IHasSessionId"),e(", "),n("code",null,"IHasBearerToken"),e(" and "),n("code",null,"IHasVersion"),e(" Request DTOs")]),n("li",null,[e("Batched API support via "),n("code",null,"SendAll/Async"),e(" and "),n("code",null,"PublishAll/Async"),e(" APIs")]),n("li",null,"Global and Instance Request/Response Filters to apply generic custom logic on each request"),n("li",null,[e("C# 8 "),n("code",null,"await foreach"),e(" friendly "),n("code",null,"async IAsyncEnumerable<TResponse> Stream()"),e(" APIs for Server Stream gRPC Services")])],-1),mn=n("p",null,[e("Importantly "),n("code",null,"GrpcServiceClient"),e(" implements the same interfaces shared by other "),n("a",{href:"/csharp-client"},"C#/.NET Typed Generic Clients"),e(" allowing development of higher-level shared client logic and libraries decoupled from concrete implementations, improved testability, easy substitution to other clients for improved debuggability or working around limitations in protocol buffers, as well as parallel client/server development where devs can temporarily bind to mock clients before server APIs are implemented.")],-1),fn=n("p",null,[e("The predetermined Generic API Surface area of the service client interfaces also makes it easier to develop enhanced functionality like "),n("a",{href:"/cache-aware-clients"},"Cache Aware Service Clients"),e(' in future that existing Apps will be able to utilize via a minimally disruptive "drop-in" implementation.')],-1),vn=n("h4",{id:"prefer-async",tabindex:"-1"},[e("Prefer Async "),n("a",{class:"header-anchor",href:"#prefer-async","aria-hidden":"true"},"#")],-1),yn=n("p",null,[e("As all .NET gRPC Clients are inherently built on an "),n("code",null,"async"),e(" implementation, clients should prefer "),n("code",null,"*Async"),e(" APIs wherever possible as both "),n("code",null,"protoc"),e(" and "),n("code",null,"GrpcServiceClient"),e(' only offer nonoptimal "sync over async" APIs.')],-1),wn=n("h4",{id:"servicestack-interceptor-for-protoc-generated-clients",tabindex:"-1"},[e("ServiceStack Interceptor for protoc generated clients "),n("a",{class:"header-anchor",href:"#servicestack-interceptor-for-protoc-generated-clients","aria-hidden":"true"},"#")],-1),bn=n("p",null,[e("As "),n("code",null,"GrpcServiceClient"),e(" offers a nicer UX its usage over "),n("code",null,"protoc"),e(" generated clients should generally be preferred, one area where you'll want to consider using Google's "),n("code",null,"protoc"),e(" generated clients is in AOT environments like Xamarin.iOS as the "),n("code",null,"protoc"),e(" tooling emits AOT-friendly Protocol Buffer serialization implementations within its code generated Types.")],-1),_n=n("p",null,[e("To better accommodate scenarios where "),n("code",null,"protoc"),e(" clients are used you can use the "),n("code",null,"ServiceStackClientInterceptor"),e(" (also in "),n("strong",null,"ServiceStack.GrpcClient"),e(") to replicate most of the rich ServiceStack integration features that's possible to implement using an "),n("code",null,"Interceptor"),e(".")],-1),Sn=n("p",null,[e("ServiceStack's Interceptor can be registered using "),n("code",null,"GrpcServiceStack.Client()"),e(" when creating the protoc "),n("code",null,"GrpcServicesClient"),e(":")],-1),Cn=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},"// Insecure plain-text example"),e(`
GrpcClientFactory`),n("span",{class:"token punctuation"},"."),e("AllowUnencryptedHttp2 "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" client "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},[e("GrpcServices"),n("span",{class:"token punctuation"},"."),e("GrpcServicesClient")]),n("span",{class:"token punctuation"},"("),e(`
    GrpcServiceStack`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Client"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"http://todoworld.servicestack.net:5054"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token comment"},"// SSL Example"),e(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" client "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},[e("GrpcServices"),n("span",{class:"token punctuation"},"."),e("GrpcServicesClient")]),n("span",{class:"token punctuation"},"("),e(`
    GrpcServiceStack`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Client"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"https://todoworld.servicestack.net:50051"'),n("span",{class:"token punctuation"},","),e(` 
        `),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"X509Certificate2"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"grpc.crt"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),e(`
        GrpcUtils`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"AllowSelfSignedCertificatesFrom"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"todoworld.servicestack.net"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token comment"},"// Optional (avoid protobuf-net deserialization)"),e(`
GrpcServiceStack`),n("span",{class:"token punctuation"},"."),e("ParseResponseStatus "),n("span",{class:"token operator"},"="),e(" bytes "),n("span",{class:"token operator"},"=>"),e(" ResponseStatus"),n("span",{class:"token punctuation"},"."),e("Parser"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"ParseFrom"),n("span",{class:"token punctuation"},"("),e("bytes"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),Pn=n("h3",{id:"preserve-rich-semantics-and-api-design",tabindex:"-1"},[e("Preserve rich Semantics and API Design "),n("a",{class:"header-anchor",href:"#preserve-rich-semantics-and-api-design","aria-hidden":"true"},"#")],-1),Tn=n("p",null,"gRPC Services enables an efficient long-lived HTTP/2 multiplexed channel with performant Protocol Buffer serialization and a vast code-generation framework allowing us to provide Typed clients for most major programming languages.",-1),xn=n("p",null,[e("An area that could see a regression which all RPC frameworks suffer from is the erosion of the "),n("a",{href:"/why-servicestack#goals-of-service-design"},"Goals of Service Design"),e(" and loss of loosely-coupled resource-oriented HTTP API Design centered around applying actions (aka HTTP Verbs) to the request subjects, laying out a logical structure for your API Design that's also able to better communicate at a higher-level the commonly understood properties of each HTTP method.")],-1),Rn=n("p",null,[e("Forcing the usage of "),n("strong",null,"messages"),e(" in gRPC Service Requests partially mitigates against the "),n("a",{href:"/why-servicestack#wcf-the-anti-dto-web-services-framework"},"fragile usage of chatty client-specific method signatures"),e(' plagued by most RPC frameworks like WCF, but still makes it easy for API designs to descend into a logically unstructured "free-for-all" surface area adopting non-standard conventions making it harder and requiring more effort to convey understanding to your API consumers.')],-1),An=n("p",null,"By continuing to develop your ServiceStack Services as a good HTTP First citizens using coarse-grained loosely-coupled messages oriented around resources, a lot of the rich HTTP semantics is preserved where each Verb remains accessible where its prefixed at the start of the rpc Method name:",-1),qn=n("div",{class:"language-proto"},[n("pre",null,[n("code",null,`rpc [Verb][RequestType](RequestType) returns (ResponseType) {}
`)])],-1),Dn=n("p",null,[e("The original HTTP Status Code remains accessible from the "),n("strong",null,"httpstatus"),e(" gRPC Metadata Response Header that continues to be populated in the "),n("code",null,"WebServiceException.StatusCode"),e(" thrown in "),n("code",null,"GrpcServiceClient"),e(" or "),n("code",null,"protoc"),e(" clients configured with the ServiceStack Interceptor. Any Custom HTTP Headers added by your Services are also returned in gRPC headers including your Services detailed structured Exception information stored as a serialized "),n("code",null,"ResponseStatus"),e(" message in the "),n("strong",null,"responsestatus-bin"),e(" Header that continues to be available in "),n("code",null,"WebServiceException.ResponseStatus"),e(" property allowing gRPC client Apps to develop "),n("a",{href:"/world-validation#contacts-page"},"rich form validation bindings"),e(" that's otherwise not possible in gRPC's failed responses containing just an error code and simple text description.")],-1),In=n("h3",{id:"offer-best-api-for-every-platform",tabindex:"-1"},[e("Offer best API for every platform "),n("a",{class:"header-anchor",href:"#offer-best-api-for-every-platform","aria-hidden":"true"},"#")],-1),Gn=n("p",null,[e("Given the trade-offs of gRPC we still expect the traditional and more ubiquitous HTTP/REST API endpoints to be more widely utilized in areas where you don't control both client and server Apps, where simplicity and interoperability is more important than maximum performance, when needing to support Ajax requests in Web Apps where HTTP/JSON is the lingua franca with rich support baked into many JS libraries or if needing to support environments where deeper integration of different formats is preferred, e.g. utilizing "),n("a",{href:"/csv-format"},"CSV Format"),e(" in Excel based workflows or importing datasets into Databases where it's natively supported in most RDBMS's tooling.")],-1),En=n("p",null,'With the additional "complexity tax" for adopting a gRPC-based solution workflow, many App developers are still going to prefer the simplicity of consuming a HTTP/JSON API from a URL and HTTP API docs.',-1),Nn=n("p",null,"As gRPC is just another endpoint for your ServiceStack Services you don't have to take the risk of committing to one scenario at the expense of all others and can continue to serve all client consumers with the best API for every platform simultaneously.",-1),On=n("h2",{id:"architecture",tabindex:"-1"},[e("Architecture "),n("a",{class:"header-anchor",href:"#architecture","aria-hidden":"true"},"#")],-1),jn=n("p",null,[e("Unlike in other Services where ServiceStack handles writing the response directly to the HttpResponse, ServiceStack's gRPC Services are the implementation for "),n("a",{href:"http://ASP.NET",target:"_blank",rel:"noopener noreferrer"},"ASP.NET"),e(" Core gRPC Endpoint requests where it makes use of "),n("a",{href:"https://github.com/mgravell",target:"_blank",rel:"noopener noreferrer"},"Marc Gravell's"),e(" code-first "),n("a",{href:"https://github.com/protobuf-net/protobuf-net.Grpc",target:"_blank",rel:"noopener noreferrer"},"protobuf-net.Grpc"),e(" library to enable ServiceStack's code-first development model of using typed Request/Response DTOs to implement and consume gRPC Services.")],-1),Hn=n("p",null,[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/grpc/grpc-request.svg?sanitize=true",alt:""})],-1),Mn=n("p",null,[e("Requests are executed using the "),n("a",{href:"/order-of-operations#rpcgateway"},"RpcGateway"),e(" which provides a pure object model for executing the full HTTP Request pipeline which returns the Response DTO back to ASP .NET Core gRPC which handles sending the response back to the HTTP/2 connected client.")],-1),Fn=n("h2",{id:"limitations",tabindex:"-1"},[e("Limitations "),n("a",{class:"header-anchor",href:"#limitations","aria-hidden":"true"},"#")],-1),Bn=n("p",null,"Protocol Buffers have a number of restrictions in Types it supports:",-1),zn=n("h3",{id:"inheritance",tabindex:"-1"},[e("Inheritance "),n("a",{class:"header-anchor",href:"#inheritance","aria-hidden":"true"},"#")],-1),Vn=n("p",null,[e("In its pursuit of defining a universal service description that can be both implemented and consumed by each major programming language, Google's gRPC "),n("code",null,".proto"),e(" and Protocol Buffers suffers from the limitations of needing to abide by the lowest common denominator functionality available in all languages that's limited to use "),n("a",{href:"https://developers.google.com/protocol-buffers/docs/reference/google.protobuf",target:"_blank",rel:"noopener noreferrer"},"Protocol Buffers built-in and Well Known Types"),e(" which is much more restrictive than schema-less formats like JSON where the Type definition is retained in native POCOs used to de/serialize JSON.")],-1),Qn=n("p",null,"The Types of limitations applicable when building gRPC Services in .NET include:",-1),Ln=n("ul",null,[n("li",null,"No support for Generic Types"),n("li",null,"No proper support for Inheritance"),n("li",null,"All enums need a zero value"),n("li",null,[e("All top-level enum names to be "),n("strong",null,"globally unique"),e(" across all enums used in your Services")]),n("li",null,[e("No built-in Types that can accommodate .NET's "),n("code",null,"Decimal"),e(", "),n("code",null,"Guid"),e(" Types")]),n("li",null,[e("Loss of precision when using the built-in "),n("code",null,"Timestamp"),e(" to serialize .NET's "),n("code",null,"DateTime"),e(" or "),n("code",null,"DateTimeOffset")])],-1),Wn=n("p",null,[e("The "),n("a",{href:"https://github.com/protobuf-net/protobuf-net",target:"_blank",rel:"noopener noreferrer"},"protobuf-net"),e(" library used in both Server and "),n("code",null,"GrpcServiceClient"),e(" implementations does its best to transparently work around above limitations, e.g:")],-1),Un=n("ul",null,[n("li",null,"Creates multiple messages using reified generic type names for each concrete Generic Type used"),n("li",null,'Allows defining layout of base Types to embed ("has a") relation of known sub types'),n("li",null,[e("Emits "),n("code",null,"ZERO"),e(" enum value for enums without "),n("code",null,"0"),e(" default values "),n("ul",null,[n("li",null,"Due to unique naming enum scoping rules it's an error to do this for more than 1 Enum")])]),n("li",null,[e("Utilizing custom Types defined in an accompanying "),n("code",null,"bcl.proto"),e(" to support .NET's "),n("code",null,"Decimal"),e(", "),n("code",null,"Guid"),e(" Types")]),n("li",null,[e("Other BCL Types like "),n("code",null,"DateTimeOffset"),e(" can be "),n("a",{href:"https://github.com/protobuf-net/protobuf-net/issues/226#issuecomment-319564317",target:"_blank",rel:"noopener noreferrer"},"supported via surrogates")])],-1),Jn=n("h2",{id:"features",tabindex:"-1"},[e("Features "),n("a",{class:"header-anchor",href:"#features","aria-hidden":"true"},"#")],-1),$n=n("p",null,"In addition to its code-first development model ServiceStack gRPC adds a number of useful features to simplify and provide a richer gRPC Services development experience:",-1),Xn=n("h3",{id:"protobuf-net-inheritance",tabindex:"-1"},[e("protobuf-net Inheritance "),n("a",{class:"header-anchor",href:"#protobuf-net-inheritance","aria-hidden":"true"},"#")],-1),Kn=n("p",null,[e("As it's important to best provide a seamless out-of-the-box solution to alleviate as much friction as possible, "),n("a",{href:"/grpc#flattened-request-hierarchys"},"Request DTOs flatten their inheritance hierarchy"),e(" in order to provide the optimal typed API for "),n("a",{href:"/grpc#protoc-generated-clients"},".proto generated clients"),e(".")],-1),Yn=n("p",null,[e("Inheritance in Request DTOs can provide a "),n("a",{href:"/autoquery-crud#advanced-crud-example"},"natural way to compose functionality"),e(", otherwise using "),n("a",{href:"https://stackoverflow.com/a/10759250/85785",target:"_blank",rel:"noopener noreferrer"},"inheritance in DTOs is not recommended"),e(" to avoid runtime serialization & interoperability issues and "),n("a",{href:"/why-remote-services-use-dtos#dry-vs-intent"},"define more explicit Service Contracts"),e(".")],-1),Zn=n("p",null,[e("In order to support inheritance "),n("a",{href:"https://github.com/protobuf-net/protobuf-net/wiki/Getting-Started#inheritance",target:"_blank",rel:"noopener noreferrer"},"protobuf-net has to retrofit"),e(" its support by embedding sub classes as different fields in the base class type. This is awkward since all known sub classes needs to be defined upfront on the base type using a consistent and non-conflicting numerical field id.")],-1),ne=n("p",null,[e("To support inheritance in gRPC, ServiceStack pre-configures a numerical index on all known sub types in your Services Contract with a generated "),n("a",{href:"https://softwareengineering.stackexchange.com/a/145633/14025",target:"_blank",rel:"noopener noreferrer"},"Murmur2 hash"),e(" (best overall for speed/randomness) of the "),n("strong",null,"Types Name"),e(" that's modded to within the "),n("code",null,"2^29-1"),e(" range of "),n("a",{href:"https://developers.google.com/protocol-buffers/docs/proto#assigning-field-numbers",target:"_blank",rel:"noopener noreferrer"},"valid field ids in protocol buffers"),e(" - resulting in a low (but still possible) index collision.")],-1),ee=n("p",null,[e("To instead use your own user-defined field id for inherited classes you can use the "),n("code",null,"[Id]"),e(" attribute, for AutoQuery Services it should at least start from "),n("code",null,"10"),e(" to avoid conflicts with its base class properties, e.g:")],-1),se=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataContract"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token class-name"},"Id"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"10"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"Rockstar"),e(),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},"RockstarBase")]),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("Order "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},"Guid"),e(" Id "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),te=n("p",null,[e("The "),n("code",null,"[Id]"),e(" needs to be "),n("strong",null,"unique across all Sub Types"),e(" and must not conflict with base class field ids, given AutoQuery Services share the same base-class, any user-defined "),n("code",null,"[Id(N)]"),e(" used needs to be "),n("strong",null,"unique across all your AutoQuery Services"),e(".")],-1),ae=n("p",null,[e("Both implicit or explicit "),n("code",null,"[Id]"),e(" inherited Types works nicely with the generic "),n("code",null,"GrpcServiceClient"),e(" where it allows calling the base and Sub Type properties, e.g:")],-1),oe=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" response "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"await"),e(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"QueryRockstars"),e(),n("span",{class:"token punctuation"},"{"),e(" Age "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"27"),n("span",{class:"token punctuation"},","),e(" Include "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},'"Total"'),e(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),ce=n("p",null,[e("Unfortunately usage of inheritance is "),n("a",{href:"https://github.com/protobuf-net/protobuf-net.Grpc/issues/50",target:"_blank",rel:"noopener noreferrer"},"currently not compatible with protoc clients"),e(" so in order to call AutoQuery Services from protoc generated clients you can utilize "),n("strong",null,"Dynamic gRPC Requests"),e(" to execute any Service from an loosely-typed string dictionary.")],-1),le=n("h3",{id:"dynamic-grpc-requests",tabindex:"-1"},[e("Dynamic gRPC Requests "),n("a",{class:"header-anchor",href:"#dynamic-grpc-requests","aria-hidden":"true"},"#")],-1),re=n("p",null,[e("Dynamic Requests lets you to populate Request DTOs of gRPC Services with a "),n("code",null,"DynamicRequest"),e(" DTO in the same way as "),n("strong",null,"QueryString"),e(" and "),n("strong",null,"FormData"),e(" is used to populate a Request DTO, in this case "),n("code",null,"DynamicRequest"),e(" is just a Request DTO containing a string dictionary:")],-1),ie=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataContract")]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"DynamicRequest"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("Order "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[e("Dictionary"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},">")]),e(" Params "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),pe=n("blockquote",null,[n("p",null,[e("Which just like QueryStrings/FormData are also able to "),n("a",{href:"/serialization-deserialization"},"populate deeply nested object graphs from a JSV string")])],-1),ue=n("p",null,[e("By default ServiceStack only generates Dynamic Services for Services annotated with the "),n("code",null,'[Tag("Dynamic")]'),e(" attribute, e.g:")],-1),de=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"Tag"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("Keywords"),n("span",{class:"token punctuation"},"."),e("Dynamic"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataContract")]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"QueryRockstars"),e(),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},[e("QueryDb"),n("span",{class:"token punctuation"},"<"),e("Rockstar"),n("span",{class:"token punctuation"},">")])]),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataMember"),n("span",{class:"token attribute-arguments"},[n("span",{class:"token punctuation"},"("),e("Order "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")")])]),n("span",{class:"token punctuation"},"]"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"?")]),e(" Age "),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token keyword"},"get"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token keyword"},"set"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),ke=n("p",null,[e("This generates an additional Service that uses a "),n("code",null,"DynamicRequest"),e(" DTO input, in the format:")],-1),he=n("div",{class:"language-"},[n("pre",null,[n("code",null,`rpc [Verb]Dynamic[RequestType](DynamicRequest) returns (ResponseType) {}
`)])],-1),ge=n("p",null,[e("For the "),n("code",null,"QueryRockstars"),e(" above, it generates:")],-1),me=n("div",{class:"language-proto"},[n("pre",null,[n("code",null,`rpc GetDynamicQueryRockstars(DynamicRequest) returns (QueryResponse_Rockstar) {}
`)])],-1),fe=n("p",null,[e("Dynamic Requests are useful when you'd prefer to be able to populate Requests from an untyped string Dictionary such as implementing a "),n("a",{href:"https://github.com/ServiceStack/Admin",target:"_blank",rel:"noopener noreferrer"},"dynamic Query Builder UI"),e(" which would require significantly less effort and boilerplate then trying to map dynamic rules into populating a typed Request.")],-1),ve=n("p",null,[e("They're also required for calling Services that doesn't have an explicit Service contract like any untyped "),n("a",{href:"/autoquery-rdbms#implicit-conventions"},"AutoQuery Services utilizing implicit conventions"),e(", e.g:")],-1),ye=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"QueryRockstars"),e(),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},[e("QueryDb"),n("span",{class:"token punctuation"},"<"),e("Rockstar"),n("span",{class:"token punctuation"},">")])]),e(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),we=n("p",null,[e("Until "),n("a",{href:"https://github.com/protobuf-net/protobuf-net.Grpc/issues/50",target:"_blank",rel:"noopener noreferrer"},"protoc clients are compatible with protobuf-net inheritance"),e(" they can be used as an alternative for calling inheritance-based Request DTOs like AutoQuery.")],-1),be=n("p",null,[e("The "),n("code",null,"CreateDynamicService"),e(" predicate determines which Services should have dynamic requests generated for it, by default it's limited to Request DTOs annotated with "),n("code",null,'[Tag("Dynamic")]'),e(", but can also be made to have dynamic requests generated for "),n("strong",null,"all AutoQuery Services"),e(" with:")],-1),_e=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GrpcFeature"),n("span",{class:"token punctuation"},"("),e("App"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    CreateDynamicService `),n("span",{class:"token operator"},"="),e(" GrpcConfig"),n("span",{class:"token punctuation"},"."),e(`AutoQueryOrDynamicAttribute
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),Se=n("p",null,[e("When configured each AutoQuery Service will have an additional Service starting with "),n("code",null,"GetDynamic*"),e(" available that can be called with a "),n("code",null,"DynamicRequest"),e(", in fact the same "),n("code",null,"DynamicRequest"),e(" can be used to call either Typed or Untyped AutoQuery Services, e.g:")],-1),Ce=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" response "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"await"),e(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetDynamicQueryRockstarsAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"DynamicRequest"),e(),n("span",{class:"token punctuation"},"{"),e(`
    Params `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token string"},'"Age"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"27"'),e(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),e(` 
        `),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token string"},'"OrderBy"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"FirstName"'),e(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),e(`
        `),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token string"},'"Include"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"Total"'),e(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),Pe=n("p",null,[e("In addition to populating the Request DTO each dynamic param will also be available to your services via the "),n("code",null,"IRequest.QueryString"),e(" collection.")],-1),Te=n("h3",{id:"simulate-http-requests",tabindex:"-1"},[e("Simulate HTTP Requests "),n("a",{class:"header-anchor",href:"#simulate-http-requests","aria-hidden":"true"},"#")],-1),xe=n("p",null,[e("Similar to "),n("code",null,"DynamicRequest"),e(" even normal typed gRPC Service requests can be augmented with gRPC Metadata Request Headers where they can be used to be able to simulate an HTTP Request where headers starting with:")],-1),Re=n("ul",null,[n("li",null,[n("code",null,"query."),e(" - added to "),n("code",null,"IRequest.QueryString")]),n("li",null,[n("code",null,"form."),e(" - added to "),n("code",null,"IRequest.FormData")]),n("li",null,[n("code",null,"cookie."),e(" - added to "),n("code",null,"IRequest.Cookies")]),n("li",null,[n("code",null,"header."),e(" - added to "),n("code",null,"IRequest.Headers"),e(" (default)")]),n("li",null,[e("Remaining headers without above prefixes are added to "),n("code",null,"IRequest.Headers"),e(" as-is.")])],-1),Ae=n("p",null,"This can be used to simulate a valid HTTP Request for Filters, Plugins and HTTP APIs that are specific in how they analyze HTTP Requests.",-1),qe=n("p",null,[e("So just like "),n("code",null,"DynamicRequest"),e(" you can use dynamic gRPC Metadata Headers to populated typed gRPC Service requests, e.g:")],-1),De=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" client "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GrpcServiceClient"),n("span",{class:"token punctuation"},"("),e("baseUrl"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    RequestFilter `),n("span",{class:"token operator"},"="),e(" ctx "),n("span",{class:"token operator"},"=>"),e(),n("span",{class:"token punctuation"},"{"),e(`
        ctx`),n("span",{class:"token punctuation"},"."),e("RequestHeaders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"UserAgent"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"Googlebot/2.1 (+http://www.google.com/bot.html)"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token comment"},"//impersonate"),e(`
        ctx`),n("span",{class:"token punctuation"},"."),e("RequestHeaders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"query.Age"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"27"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        ctx`),n("span",{class:"token punctuation"},"."),e("RequestHeaders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"query.OrderBy"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"FirstName"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        ctx`),n("span",{class:"token punctuation"},"."),e("RequestHeaders"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"query.Include"'),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token string"},'"Total"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" response "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"await"),e(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"QueryRockstars"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),Ie=n("p",null,[e("Where each matching property will populate the Request DTO with the string value using the conversion rules in "),n("a",{href:"/auto-mapping"},"ServiceStack's Auto Mapping"),e(".")],-1),Ge=n("p",null,"If you don't wish for Headers to be able to populate Typed gRPC Requests, it can be disabled with:",-1),Ee=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GrpcFeature"),n("span",{class:"token punctuation"},"("),e("App"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    DisableRequestParamsInHeaders `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token boolean"},"true"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),Ne=n("h3",{id:"server-stream-grpc-services",tabindex:"-1"},[e("Server Stream gRPC Services "),n("a",{class:"header-anchor",href:"#server-stream-grpc-services","aria-hidden":"true"},"#")],-1),Oe=n("p",null,[e("All gRPC Services we've seen so far are what gRPC Refers to as "),n("strong",null,"Unary RPC"),e(", i.e. where clients sends a single request to the server and gets a single response back. Another very useful communication style supported by gRPC is "),n("strong",null,"Server streaming"),e(":")],-1),je=n("blockquote",null,[n("p",null,"the client sends a request to the server and gets a stream to read a sequence of messages back. The client reads from the returned stream until there are no more messages. gRPC guarantees message ordering within an individual RPC call.")],-1),He=n("h4",{id:"streamserverevents",tabindex:"-1"},[e("StreamServerEvents "),n("a",{class:"header-anchor",href:"#streamserverevents","aria-hidden":"true"},"#")],-1),Me=n("p",null,[e("There are a couple of scenarios in ServiceStack where this communication channel is especially useful such as "),n("a",{href:"/server-events"},"Server Events"),e(' which operates in a similar style with clients connecting to a long-lived HTTP connection that streams back "real-time Events" over the light and efficient '),n("a",{href:"https://www.html5rocks.com/en/tutorials/eventsource/basics/",target:"_blank",rel:"noopener noreferrer"},"SSE"),e(" standard natively supported in modern browsers.")],-1),Fe=n("p",null,"Although as HTTP Requests are not normally used for maintaining long-lived connections they're susceptible to issues like buffering from App Servers, middleware and proxies and require implementing a bespoke health-check and auto-reconnect solution in order to maintain interrupted service.",-1),Be=n("p",null,[e("As a first class supported communication channel clients can instead leverage gRPC's library infrastructure which is perfectly suited for streaming real-time Server Events over an efficient persistent HTTP/2 channel that's available from the "),n("code",null,"StreamServerEvents"),e(" gRPC Service:")],-1),ze=n("div",{class:"language-proto"},[n("pre",null,[n("code",null,`rpc ServerStreamServerEvents(StreamServerEvents) returns (stream StreamServerEventsResponse) {}
`)])],-1),Ve=n("p",null,[e("Which gives all "),n("code",null,"protoc"),e(" supported languages a Typed Client for consuming your "),n("a",{href:"/server-events"},"Server Events"),e(".")],-1),Qe=n("h4",{id:"grpcserviceclient-streams",tabindex:"-1"},[e("GrpcServiceClient Streams "),n("a",{class:"header-anchor",href:"#grpcserviceclient-streams","aria-hidden":"true"},"#")],-1),Le=n("p",null,[e("When using the generic "),n("code",null,"GrpcServiceClient"),e(" you're able to take advantage of C#'s 8 new "),n("code",null,"await foreach"),e(" syntax sugar for consuming gRPC Server Streams.")],-1),We=n("p",null,"Its usage is analogous to all Server Events clients where your initial connection contains the channels you want to subscribe to receive notifications from, e.g:",-1),Ue=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" stream "),n("span",{class:"token operator"},"="),e(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"StreamAsync"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"StreamServerEvents"),e(),n("span",{class:"token punctuation"},"{"),e(`
    Channels `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),e(),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token string"},'"todos"'),e(),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),Je=n("p",null,[e("Then you can use "),n("code",null,"await foreach"),e(" to consume an endless stream of Server Events. Use "),n("code",null,"Selector"),e(" to identify the type of Server Event whilst the complex-type body of each event message can be parsed from its JSON body, e.g:")],-1),$e=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"await"),e(),n("span",{class:"token keyword"},"foreach"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" msg "),n("span",{class:"token keyword"},"in"),e(" stream"),n("span",{class:"token punctuation"},")"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("msg"),n("span",{class:"token punctuation"},"."),e("Selector"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"StartsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"todos."'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token comment"},"//custom todos.* events"),e(`
    `),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" obj "),n("span",{class:"token operator"},"="),e(" JSON"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"parse"),n("span",{class:"token punctuation"},"("),e("msg"),n("span",{class:"token punctuation"},"."),e("Json"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(),n("span",{class:"token comment"},"//body of message in JSON"),e(`
        `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("obj "),n("span",{class:"token keyword"},"is"),e(),n("span",{class:"token class-name"},[e("Dictionary"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token keyword"},"object"),n("span",{class:"token punctuation"},">")]),e(" map"),n("span",{class:"token punctuation"},")"),e(`
        `),n("span",{class:"token punctuation"},"{"),e(`
            `),n("span",{class:"token comment"},"//todos.create + todos.update properties"),e(`
            `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" id "),n("span",{class:"token operator"},"="),e(" map"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"id"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" title "),n("span",{class:"token operator"},"="),e(" map"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"title"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"EVENT '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[e("msg"),n("span",{class:"token punctuation"},"."),e("Selector")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," ["),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[e("msg"),n("span",{class:"token punctuation"},"."),e("Channel")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"]: #"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"id"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"title"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(` 
        `),n("span",{class:"token punctuation"},"}"),e(`
        `),n("span",{class:"token keyword"},"else"),e(`
        `),n("span",{class:"token punctuation"},"{"),e(`
            `),n("span",{class:"token comment"},"//todos.delete id"),e(`
            `),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"EVENT '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[e("msg"),n("span",{class:"token punctuation"},"."),e("Selector")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," ["),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[e("msg"),n("span",{class:"token punctuation"},"."),e("Channel")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"]: "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},"obj"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token punctuation"},"}"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
    `),n("span",{class:"token keyword"},"else"),e(`
    `),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token comment"},"// general server events, e.g cmd.onConnect, cmd.onJoin, cmd.onLeave"),e(`
        `),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"EVENT '),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[e("msg"),n("span",{class:"token punctuation"},"."),e("Selector")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," ["),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[e("msg"),n("span",{class:"token punctuation"},"."),e("Channel")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"]: #"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[e("msg"),n("span",{class:"token punctuation"},"."),e("UserId")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"}," "),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[e("msg"),n("span",{class:"token punctuation"},"."),e("DisplayName")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'"')]),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),Xe=n("p",null,[e("If connected whilst running the "),n("a",{href:"https://todoworld.servicestack.net/#user-content-c-local-development-grpc-ssl-crud-example",target:"_blank",rel:"noopener noreferrer"},"TodoWorld CRUD Example"),e(" this stream will output something similar to:")],-1),Ke=n("div",{class:"language-"},[n("pre",null,[n("code",null,`EVENT cmd.onConnect []: #-1 user1
EVENT cmd.onJoin [todos]: #-1 user1
EVENT todos.create [todos]: #1 ServiceStack
EVENT todos.update [todos]: #1 gRPC
EVENT todos.delete [todos]: 1
`)])],-1),Ye=n("h4",{id:"protoc-dart-streams",tabindex:"-1"},[e("protoc Dart Streams "),n("a",{class:"header-anchor",href:"#protoc-dart-streams","aria-hidden":"true"},"#")],-1),Ze=n("p",null,[e("Other "),n("code",null,"protoc"),e(" languages will require using their own language constructs for consuming gRPC Streams, here's the "),n("a",{href:"https://todoworld.servicestack.net/#dart",target:"_blank",rel:"noopener noreferrer"},"example for Dart"),e(" that also has a pleasant API for consuming Server Streams:")],-1),ns=n("div",{class:"language-dart"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"var"),e(" stream "),n("span",{class:"token operator"},"="),e(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"serverStreamServerEvents"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"StreamServerEvents"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),e("channels"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'todos'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"await"),e(),n("span",{class:"token keyword"},"for"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"var"),e(" r "),n("span",{class:"token keyword"},"in"),e(" stream"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"var"),e(" obj "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token function"},"jsonDecode"),n("span",{class:"token punctuation"},"("),e("r"),n("span",{class:"token punctuation"},"."),e("json"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
    `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("r"),n("span",{class:"token punctuation"},"."),e("selector"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"startsWith"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'todos'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("obj "),n("span",{class:"token operator"},"is"),e(),n("span",{class:"token class-name"},"Map"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
            `),n("span",{class:"token function"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'EVENT ${r.selector} [${r.channel}]: #${obj['"),e("id"),n("span",{class:"token string"},"']} ${obj['"),e("title"),n("span",{class:"token string"},"']}'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"else"),e(),n("span",{class:"token punctuation"},"{"),e(`
            `),n("span",{class:"token function"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'EVENT ${r.selector} [${r.channel}]: ${obj}'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token punctuation"},"}"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(),n("span",{class:"token keyword"},"else"),e(),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token function"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'EVENT ${r.selector} ${r.channels}: #${obj['"),e("userId"),n("span",{class:"token string"},"']} ${obj['"),e("displayName"),n("span",{class:"token string"},"']}'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),es=n("h3",{id:"implementing-server-stream-services",tabindex:"-1"},[e("Implementing Server Stream Services "),n("a",{class:"header-anchor",href:"#implementing-server-stream-services","aria-hidden":"true"},"#")],-1),ss=n("p",null,[e("As they're not your typical unary-style Request/Response service, Server Streams are handled and implemented a little differently where in addition to inheriting ServiceStack's base "),n("code",null,"Service"),e(" class you'll need to implement the "),n("code",null,"IStreamService<TRequest,TResponse>"),e(" interface and implement its "),n("code",null,"Stream()"),e(" method for your Server Stream implementation.")],-1),ts=n("p",null,[e("Here's the implementation of ServiceStack's built-in "),n("code",null,"StreamFiles"),e(" Service which accepts multiple virtual paths of files and returns the File contents and metadata in the same order:")],-1),as=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"StreamFileService"),e(),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},"Service"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token class-name"},[e("IStreamService"),n("span",{class:"token punctuation"},"<"),e("StreamFiles"),n("span",{class:"token punctuation"},","),e("FileContent"),n("span",{class:"token punctuation"},">")])]),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"async"),e(),n("span",{class:"token return-type class-name"},[e("IAsyncEnumerable"),n("span",{class:"token punctuation"},"<"),e("FileContent"),n("span",{class:"token punctuation"},">")]),e(),n("span",{class:"token function"},"Stream"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"StreamFiles"),e(" request"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token class-name"},"CancellationToken"),e(" cancel "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"default"),n("span",{class:"token punctuation"},")"),e(`
    `),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" i "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" paths "),n("span",{class:"token operator"},"="),e(" request"),n("span",{class:"token punctuation"},"."),e("Paths "),n("span",{class:"token operator"},"??"),e(" TypeConstants"),n("span",{class:"token punctuation"},"."),e("EmptyStringList"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token keyword"},"while"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),e("cancel"),n("span",{class:"token punctuation"},"."),e("IsCancellationRequested"),n("span",{class:"token punctuation"},")"),e(`
        `),n("span",{class:"token punctuation"},"{"),e(`
            `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" file "),n("span",{class:"token operator"},"="),e(" VirtualFileSources"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetFile"),n("span",{class:"token punctuation"},"("),e("paths"),n("span",{class:"token punctuation"},"["),e("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" bytes "),n("span",{class:"token operator"},"="),e(" file"),n("span",{class:"token punctuation"},"?."),n("span",{class:"token function"},"GetBytesContentsAsBytes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
            `),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" to "),n("span",{class:"token operator"},"="),e(" file "),n("span",{class:"token operator"},"!="),e(),n("span",{class:"token keyword"},"null"),e(`
                `),n("span",{class:"token punctuation"},"?"),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"FileContent"),e(),n("span",{class:"token punctuation"},"{"),e(`
                    Name `),n("span",{class:"token operator"},"="),e(" file"),n("span",{class:"token punctuation"},"."),e("Name"),n("span",{class:"token punctuation"},","),e(`
                    Type `),n("span",{class:"token operator"},"="),e(" MimeTypes"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"GetMimeType"),n("span",{class:"token punctuation"},"("),e("file"),n("span",{class:"token punctuation"},"."),e("Extension"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),e(`
                    Body `),n("span",{class:"token operator"},"="),e(" bytes"),n("span",{class:"token punctuation"},","),e(`
                    Length `),n("span",{class:"token operator"},"="),e(" bytes"),n("span",{class:"token punctuation"},"."),e("Length"),n("span",{class:"token punctuation"},","),e(`
                `),n("span",{class:"token punctuation"},"}"),e(`
                `),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"FileContent"),e(),n("span",{class:"token punctuation"},"{"),e(`
                    Name `),n("span",{class:"token operator"},"="),e(" paths"),n("span",{class:"token punctuation"},"["),e("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),e(`
                    ResponseStatus `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"ResponseStatus"),e(),n("span",{class:"token punctuation"},"{"),e(`
                        ErrorCode `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"nameof"),n("span",{class:"token punctuation"},"("),e("HttpStatusCode"),n("span",{class:"token punctuation"},"."),e("NotFound"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),e(`
                        Message `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token string"},'"File does not exist"'),n("span",{class:"token punctuation"},","),e(`
                    `),n("span",{class:"token punctuation"},"}"),e(`
                `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(`
            
            `),n("span",{class:"token keyword"},"yield"),e(),n("span",{class:"token keyword"},"return"),e(" to"),n("span",{class:"token punctuation"},";"),e(`

            `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"++"),e("i "),n("span",{class:"token operator"},">="),e(" paths"),n("span",{class:"token punctuation"},"."),e("Count"),n("span",{class:"token punctuation"},")"),e(`
                `),n("span",{class:"token keyword"},"yield"),e(),n("span",{class:"token keyword"},"break"),n("span",{class:"token punctuation"},";"),e(`
        `),n("span",{class:"token punctuation"},"}"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),os=n("p",null,[e("Although "),n("code",null,"StreamFiles"),e(" is already pre-registered, to register your own gRPC Stream Service add them to the "),n("code",null,"RegisterServices"),e(" collection:")],-1),cs=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GrpcFeature"),n("span",{class:"token punctuation"},"("),e("App"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    RegisterServices `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token keyword"},"typeof"),n("span",{class:"token punctuation"},"("),n("span",{class:"token type-expression class-name"},"StreamFileService"),n("span",{class:"token punctuation"},")"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),ls=n("div",{class:"info custom-block"},[n("p",{class:"custom-block-title"},"INFO"),n("p",null,[e("Or remove the pre-registered "),n("code",null,"StreamFileService"),e(" and "),n("code",null,"SubscribeServerEventsService"),e(" services to disable them")])],-1),rs=n("p",null,[e("Clients can use "),n("code",null,"StreamFiles"),e(" to efficiently download multiple files over a single gRPC HTTP/2 Server Stream connection in their preferred order:")],-1),is=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" request "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"StreamFiles"),e(),n("span",{class:"token punctuation"},"{"),e(`
    Paths `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},[e("List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},">")]),e(),n("span",{class:"token punctuation"},"{"),e(`
        `),n("span",{class:"token string"},'"/js/ss-utils.js"'),n("span",{class:"token punctuation"},","),e(`
        `),n("span",{class:"token string"},'"/js/hot-loader.js"'),n("span",{class:"token punctuation"},","),e(`
        `),n("span",{class:"token string"},'"/js/not-exists.js"'),n("span",{class:"token punctuation"},","),e(`
        `),n("span",{class:"token string"},'"/js/hot-fileloader.js"'),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" files "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},[e("List"),n("span",{class:"token punctuation"},"<"),e("FileContent"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token keyword"},"await"),e(),n("span",{class:"token keyword"},"foreach"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},[n("span",{class:"token keyword"},"var")]),e(" file "),n("span",{class:"token keyword"},"in"),e(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"StreamAsync"),n("span",{class:"token punctuation"},"("),e("request"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    files`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),e("file"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),ps=n("p",null,[e("With each "),n("code",null,"FileContent"),e(" result containing either the file contents and metadata or an error response for missing files, e.g:")],-1),us=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token comment"},"// files[0].Name = 'ss-utils.js'"),e(`
`),n("span",{class:"token comment"},"// files[1].Name = 'hot-loader.js'"),e(`
`),n("span",{class:"token comment"},"// files[2].ResponseStatus.ErrorCode = NotFound"),e(`
`),n("span",{class:"token comment"},"// files[3].Name = 'hot-fileloader.js'"),e(`
`)])])],-1),ds=n("h4",{id:"protoc-dart-example",tabindex:"-1"},[e("protoc Dart Example "),n("a",{class:"header-anchor",href:"#protoc-dart-example","aria-hidden":"true"},"#")],-1),ks=n("p",null,"Example of server streaming of files from a protoc generated Dart client:",-1),hs=n("div",{class:"language-dart"},[n("pre",null,[n("code",null,[n("span",{class:"token keyword"},"var"),e(" stream "),n("span",{class:"token operator"},"="),e(" client"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"serverStreamFiles"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"StreamFiles"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),e("paths"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addAll"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),e(`
  `),n("span",{class:"token string"},"'/js/ss-utils.js'"),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token string"},"'/js/hot-loader.js'"),n("span",{class:"token punctuation"},","),e(`
  `),n("span",{class:"token string"},"'/js/hot-fileloader.js'"),n("span",{class:"token punctuation"},","),e(`
`),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"await"),e(),n("span",{class:"token keyword"},"for"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"var"),e(" file "),n("span",{class:"token keyword"},"in"),e(" stream"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token keyword"},"var"),e(" text "),n("span",{class:"token operator"},"="),e(" utf8"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"decode"),n("span",{class:"token punctuation"},"("),e("file"),n("span",{class:"token punctuation"},"."),e("body"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
  `),n("span",{class:"token function"},"print"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'FILE ${file.name} (${file.length}): ${text.substring(0, text.length < 50 ? text.length : 50)} ...'"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),gs=n("h2",{id:"ssl-certificate-configuration",tabindex:"-1"},[e("SSL Certificate Configuration "),n("a",{class:"header-anchor",href:"#ssl-certificate-configuration","aria-hidden":"true"},"#")],-1),ms=n("p",null,[e("Please see the "),n("a",{href:"/grpc-ssl"},"gRPC SSL docs"),e(" for information on how to secure your gRPC connections including scripts for creating custom self-signed certificates and hosting public gRPC Services behind nginx reverse proxies.")],-1),fs=n("h2",{id:"grpc-clients",tabindex:"-1"},[e("gRPC Clients "),n("a",{class:"header-anchor",href:"#grpc-clients","aria-hidden":"true"},"#")],-1),vs=n("p",null,[e("Visit "),n("a",{href:"https://todoworld.servicestack.net",target:"_blank",rel:"noopener noreferrer"},"todoworld.servicestack.net"),e(" to explore how easy it is to consume ServiceStack gRPC Services in different languages.")],-1),ys=n("p",null,[n("a",{href:"https://todoworld.servicestack.net/#csharp-generic",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/grpc/grpc-videos-generic.png",alt:""})])],-1),ws=n("p",null,[e("For most .NET Clients we recommend using our generic "),n("code",null,"GrpcServiceClient"),e(" with deeper ServiceStack integration that can be used with the richer "),n("a",{href:"/add-servicestack-reference"},"Add ServiceStack Reference"),e(" POCO DTOs that implements the same shared Service Client interfaces adopted by all ServiceStack's "),n("a",{href:"/csharp-client"},".NET Service Clients"),e(":")],-1),bs=n("ul",null,[n("li",null,[n("a",{href:"/grpc-generic"},"C# / F# / VB.NET Smart GrpcServiceClient")])],-1),_s=n("h3",{id:"protoc-generated-clients",tabindex:"-1"},[e("protoc generated clients "),n("a",{class:"header-anchor",href:"#protoc-generated-clients","aria-hidden":"true"},"#")],-1),Ss=n("p",null,[n("a",{href:"https://todoworld.servicestack.net/#csharp",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/grpc/grpc-videos-protoc.png",alt:""})])],-1),Cs=n("p",null,[e("For all non .NET Clients and AOT environments like Xamarin.iOS we recommend using Google's "),n("code",null,"protoc"),e(" generated clients:")],-1),Ps=n("ul",null,[n("li",null,[n("a",{href:"/grpc-csharp"},"C#")]),n("li",null,[n("a",{href:"/grpc-swift"},"Swift")]),n("li",null,[n("a",{href:"/grpc-java"},"Java")]),n("li",null,[n("a",{href:"/grpc-dart"},"Dart")]),n("li",null,[n("a",{href:"/grpc-go"},"Go")]),n("li",null,[n("a",{href:"/grpc-nodejs"},"Node.js")]),n("li",null,[n("a",{href:"/grpc-python"},"Python")]),n("li",null,[n("a",{href:"/grpc-ruby"},"Ruby")]),n("li",null,[n("a",{href:"/grpc-php"},"PHP")])],-1),Ts=n("h2",{id:"grpc-web",tabindex:"-1"},[e("gRPC Web "),n("a",{class:"header-anchor",href:"#grpc-web","aria-hidden":"true"},"#")],-1),xs=n("p",null,[e("As it's "),n("a",{href:"https://grpc.io/blog/state-of-grpc-web/",target:"_blank",rel:"noopener noreferrer"},"impossible to implement the HTTP/2 gRPC spec in the browser"),e(", in order to be able to consume gRPC services from a browser a "),n("a",{href:"https://grpc.io/blog/state-of-grpc-web/#the-tech",target:"_blank",rel:"noopener noreferrer"},"gRPC Web Proxy"),e(" is needed.")],-1),Rs=n("p",null,[e("The current recommendation from the gRPC Web team is to "),n("a",{href:"https://grpc.io/docs/tutorials/basic/web/#configure-the-envoy-proxy",target:"_blank",rel:"noopener noreferrer"},"Configure the Envoy Proxy"),e(" to forward gRPC browser requests to the native gRPC endpoint, however as it adds more moving parts and additional complexity, if you're not already using envoyproxy we instead recommended using ServiceStack HTTP JSON Services, made possible since ServiceStack's gRPC Service implementations are also made available over REST-ful HTTP APIs - i.e. the lingua franca of the web.")],-1),As=n("p",null,[e("If "),n("a",{href:"https://github.com/grpc/grpc-dotnet/issues/99",target:"_blank",rel:"noopener noreferrer"},"ASP.NET Core adds native gRPC Web support"),e(" then using gRPC clients may provide a more appealing option although it won't have a clean, versatile and rich API as "),n("a",{href:"https://docs.servicestack.net/typescript-add-servicestack-reference",target:"_blank",rel:"noopener noreferrer"},"TypeScript Add ServiceStack Reference"),e(".")],-1),qs=n("h3",{id:"x-dotnet-tool-grpc-web-support",tabindex:"-1"},[e("x dotnet tool gRPC Web support "),n("a",{class:"header-anchor",href:"#x-dotnet-tool-grpc-web-support","aria-hidden":"true"},"#")],-1),Ds=n("p",null,"If wanting to evaluate using a gRPC Web Proxy you can use generate different TypeScript and JavaScript clients using the commands below:",-1),Is=n("div",{class:"language-bash"},[n("pre",null,[n("code",null,[e("$ x proto-ts "),n("span",{class:"token operator"},"<"),e("url"),n("span",{class:"token operator"},">"),e("             "),n("span",{class:"token comment"},"# TypeScript + gRPC Web Text"),e(`
$ x proto-ts-binary `),n("span",{class:"token operator"},"<"),e("url"),n("span",{class:"token operator"},">"),e("      "),n("span",{class:"token comment"},"# TypeScript + gRPC Web Binary"),e(`
$ x proto-js-closure `),n("span",{class:"token operator"},"<"),e("url"),n("span",{class:"token operator"},">"),e("     "),n("span",{class:"token comment"},"# Google Closure + gRPC Web Text"),e(`
$ x proto-js-commonjs `),n("span",{class:"token operator"},"<"),e("url"),n("span",{class:"token operator"},">"),e("    "),n("span",{class:"token comment"},"# Common JS + gRPC Web Text"),e(`
`)])])],-1),Gs=n("p",null,[e("Or if preferred you can use the online UI or HTTP API for generating Protocol Buffers and gRPC client proxies at "),n("a",{href:"https://grpc.servicestack.net",target:"_blank",rel:"noopener noreferrer"},"grpc.servicestack.net"),e(".")],-1),Es=n("h2",{id:"grpc-configuration",tabindex:"-1"},[e("gRPC Configuration "),n("a",{class:"header-anchor",href:"#grpc-configuration","aria-hidden":"true"},"#")],-1),Ns=n("p",null,"There are a number of additional configuration options for customizing and extending ServiceStack's gRPC support:",-1),Os=n("h3",{id:"protobuf-serialization",tabindex:"-1"},[e("Protobuf Serialization "),n("a",{class:"header-anchor",href:"#protobuf-serialization","aria-hidden":"true"},"#")],-1),js=n("p",null,[e("Behavior of how "),n("a",{href:"https://github.com/protobuf-net/protobuf-net",target:"_blank",rel:"noopener noreferrer"},"protobuf-net"),e(" de/serializes .NET Models can be customized by modifying "),n("code",null,"GrpcConfig.TypeModel"),e(" where any customizations should be applied to both server and client apps if using "),n("a",{href:"/grpc-generic"},"C# generic GrpcServiceClient"),e(".")],-1),Hs=n("h3",{id:"any-methods",tabindex:"-1"},[e("Any Methods "),n("a",{class:"header-anchor",href:"#any-methods","aria-hidden":"true"},"#")],-1),Ms=n("p",null,[e("ServiceStack lets you define "),n("code",null,"Any()"),e(" services which can be invoked when called on each HTTP Method. To minimize gRPC surface area pollution, by default ServiceStack only generates different "),n("strong",null,"rpc"),e(" endpoints for HTTP's primary "),n("code",null,"Get*"),e(", "),n("code",null,"Post*"),e(", "),n("code",null,"Put*"),e(" and "),n("code",null,"Delete*"),e(" verbs.")],-1),Fs=n("p",null,[e("To change this for "),n("strong",null,"all Any services"),e(" specify which methods you want generated in "),n("code",null,"DefaultMethodsForAny"),e(" list, e.g. you can specify to only generate "),n("code",null,"Get*"),e(" and "),n("code",null,"Post*"),e(" methods with:")],-1),Bs=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GrpcFeature"),n("span",{class:"token punctuation"},"("),e("App"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    DefaultMethodsForAny `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},[e("List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},">")]),e(),n("span",{class:"token punctuation"},"{"),e(` 
        HttpMethods`),n("span",{class:"token punctuation"},"."),e("Get"),n("span",{class:"token punctuation"},","),e(`
        HttpMethods`),n("span",{class:"token punctuation"},"."),e("Post"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),zs=n("p",null,[e("As "),n("a",{href:"/autoquery"},"AutoQuery Services"),e(" are read-only queries they only default to generating "),n("code",null,"Get*"),e(" rpc methods, which can be changed with:")],-1),Vs=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GrpcFeature"),n("span",{class:"token punctuation"},"("),e("App"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    AutoQueryMethodsForAny `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},[e("List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token keyword"},"string"),n("span",{class:"token punctuation"},">")]),e(),n("span",{class:"token punctuation"},"{"),e(` 
        HttpMethods`),n("span",{class:"token punctuation"},"."),e("Get"),n("span",{class:"token punctuation"},","),e(`
        HttpMethods`),n("span",{class:"token punctuation"},"."),e("Post"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),Qs=n("p",null,[e("This can be customized per service by annotating your Request DTO with "),n("code",null,"IVerb"),e(" marker interfaces, e.g:")],-1),Ls=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[n("span",{class:"token punctuation"},"["),n("span",{class:"token attribute"},[n("span",{class:"token class-name"},"DataContract")]),n("span",{class:"token punctuation"},"]"),e(`
`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"Hello"),e(),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},[e("IReturn"),n("span",{class:"token punctuation"},"<"),e("HelloResponse"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token class-name"},"IGet"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token class-name"},"IPost")]),e(),n("span",{class:"token punctuation"},"{"),e(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),e(),n("span",{class:"token punctuation"},"}"),e(`

`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"MyServices"),e(),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token type-list"},[n("span",{class:"token class-name"},"Service")]),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"object")]),e(),n("span",{class:"token function"},"Any"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Hello"),e(" request"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token operator"},"=>"),e(),n("span",{class:"token range operator"},".."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),Ws=n("p",null,[e("Alternatively you can replace your "),n("code",null,"Any()"),e(" method and only implement the specific methods you want generated, e.g. "),n("code",null,"Get()"),e(" or "),n("code",null,"Post()"),e(".")],-1),Us=n("p",null,[e("For even finer-grained customization you can override the "),n("code",null,"GenerateMethodsForAny"),e(" predicate to adopt your own conventions.")],-1),Js=n("h3",{id:"custom-grpc-status-codes",tabindex:"-1"},[e("Custom gRPC Status Codes "),n("a",{class:"header-anchor",href:"#custom-grpc-status-codes","aria-hidden":"true"},"#")],-1),$s=n("p",null,[e("gRPC has are reduced number of "),n("a",{href:"https://github.com/grpc/grpc/blob/master/doc/statuscodes.md",target:"_blank",rel:"noopener noreferrer"},"Error Status Codes"),e(" compared to what's available in HTTP, you can override ServiceStack's built-in "),n("code",null,"HTTP > gRPC"),e(" mapping with your own implementation by populating "),n("code",null,"ToGrpcStatus"),e(", e.g:")],-1),Xs=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GrpcFeature"),n("span",{class:"token punctuation"},"("),e("App"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    ToGrpcStatus `),n("span",{class:"token operator"},"="),e(" httpRes "),n("span",{class:"token operator"},"=>"),e(" httpRes"),n("span",{class:"token punctuation"},"."),e("StatusCode "),n("span",{class:"token operator"},"=="),e(),n("span",{class:"token number"},"404"),e(`
        `),n("span",{class:"token punctuation"},"?"),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"Status"),n("span",{class:"token punctuation"},"("),e("StatusCode"),n("span",{class:"token punctuation"},"."),e("NotFound"),n("span",{class:"token punctuation"},","),e(" httpRes"),n("span",{class:"token punctuation"},"."),e("StatusDescription"),n("span",{class:"token punctuation"},")"),e(`
        `),n("span",{class:"token punctuation"},":"),e(),n("span",{class:"token punctuation"},"("),e("Status"),n("span",{class:"token punctuation"},"?"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token keyword"},"null"),e(),n("span",{class:"token comment"},"// use default behavior"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),Ks=n("h3",{id:"filtered-http-headers",tabindex:"-1"},[e("Filtered HTTP Headers "),n("a",{class:"header-anchor",href:"#filtered-http-headers","aria-hidden":"true"},"#")],-1),Ys=n("p",null,[e("You can control which of your custom HTTP Headers you don't want to return by adding them to the "),n("code",null,"IgnoreResponseHeaders"),e(" collection:")],-1),Zs=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GrpcFeature"),n("span",{class:"token punctuation"},"("),e("App"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    IgnoreResponseHeaders `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token punctuation"},"{"),e(" HttpHeaders"),n("span",{class:"token punctuation"},"."),e("ContentDisposition "),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`
`)])])],-1),nt=n("h3",{id:"proto-options",tabindex:"-1"},[e("Proto Options "),n("a",{class:"header-anchor",href:"#proto-options","aria-hidden":"true"},"#")],-1),et=n("p",null,[e("The auto-generated "),n("code",null,".proto"),e(" service description ServiceStack generates at "),n("code",null,"/types/proto"),e(" allows for "),n("a",{href:"https://developers.google.com/protocol-buffers/docs/proto#options",target:"_blank",rel:"noopener noreferrer"},"proto options"),e(" to customize "),n("code",null,"protoc"),e(" code-generation behavior which are pre-configured with C# and PHP namespaces used in its generated proxy clients.")],-1),st=n("p",null,[e("You can include your own proto options by registering them in the "),n("code",null,"ProtoOptions"),e(" collection as seen below:")],-1),tt=n("div",{class:"language-csharp"},[n("pre",null,[n("code",null,[e("Plugins"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Add"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},"GrpcFeature"),n("span",{class:"token punctuation"},"("),e("App"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    ProtoOptions `),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"new"),e(),n("span",{class:"token constructor-invocation class-name"},[e("List"),n("span",{class:"token punctuation"},"<"),e("ProtoOptionDelegate"),n("span",{class:"token punctuation"},">")]),e(),n("span",{class:"token punctuation"},"{"),e(` 
        ProtoOption`),n("span",{class:"token punctuation"},"."),e("CSharpNamespace"),n("span",{class:"token punctuation"},","),e(`
        ProtoOption`),n("span",{class:"token punctuation"},"."),e("PhpNamespace"),n("span",{class:"token punctuation"},","),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),e(`

`),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"static"),e(),n("span",{class:"token keyword"},"class"),e(),n("span",{class:"token class-name"},"ProtoOption"),e(`
`),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"static"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),e(),n("span",{class:"token function"},"CSharpNamespace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"IRequest"),e(" req"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token class-name"},"MetadataTypesConfig"),e(" config"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token operator"},"=>"),e(`
        `),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"option csharp_namespace = \\"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[e("config"),n("span",{class:"token punctuation"},"."),e("GlobalNamespace")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'\\";"')]),n("span",{class:"token punctuation"},";"),e(`

    `),n("span",{class:"token keyword"},"public"),e(),n("span",{class:"token keyword"},"static"),e(),n("span",{class:"token return-type class-name"},[n("span",{class:"token keyword"},"string")]),e(),n("span",{class:"token function"},"PhpNamespace"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"IRequest"),e(" req"),n("span",{class:"token punctuation"},","),e(),n("span",{class:"token class-name"},"MetadataTypesConfig"),e(" config"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token operator"},"=>"),e(`
        `),n("span",{class:"token interpolation-string"},[n("span",{class:"token string"},'$"option php_namespace = \\"'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),n("span",{class:"token expression language-csharp"},[e("config"),n("span",{class:"token punctuation"},"."),e("GlobalNamespace")]),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'\\";"')]),n("span",{class:"token punctuation"},";"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])])],-1),at=n("h2",{id:"public-grpc-protoc-service-and-ui",tabindex:"-1"},[e("Public gRPC protoc Service and UI "),n("a",{class:"header-anchor",href:"#public-grpc-protoc-service-and-ui","aria-hidden":"true"},"#")],-1),ot=n("h3",{id:"grpc-servicestack-net",tabindex:"-1"},[n("a",{href:"https://grpc.servicestack.net",target:"_blank",rel:"noopener noreferrer"},"grpc.servicestack.net"),e(),n("a",{class:"header-anchor",href:"#grpc-servicestack-net","aria-hidden":"true"},"#")],-1),ct=n("p",null,[n("a",{href:"https://grpc.servicestack.net",target:"_blank",rel:"noopener noreferrer"},[n("img",{src:"https://raw.githubusercontent.com/ServiceStack/docs/master/docs/images/grpc/protoc-api.png",alt:""})])],-1),lt=n("p",null,[e("To provide the simplest and seamless end-to-end gRPC solution we're maintaining a "),n("strong",null,[n("a",{href:"https://grpc.servicestack.net",target:"_blank",rel:"noopener noreferrer"},"public gRPC protoc Service")]),e(" and UI which is the backend empowering our cross-platform "),n("a",{href:"/dotnet-tool"},"dotnet tools"),e(" to be able to generate Protocol Buffer DTOs and gRPC clients in every "),n("code",null,"protoc"),e(" supported language without any installation, tooling or configuration required.")],-1),rt=n("p",null,[e("This is a public service "),n("strong",null,"any gRPC clients using any gRPC Service framework"),e(" can use as an alternative for having each client configure and maintain their build system to use protoc tooling.")],-1),it=n("p",null,[e("Local "),n("strong",null,".proto"),e(" files aren't necessary for ServiceStack gRPC Services with gRPC clients only needing a URL, e.g:")],-1),pt=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,[n("code",null,"x proto-<lang> https://todoworld.servicestack.net")])])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),ut=n("h3",{id:"from-proto-descriptors",tabindex:"-1"},[e("From .proto descriptors "),n("a",{class:"header-anchor",href:"#from-proto-descriptors","aria-hidden":"true"},"#")],-1),dt=n("p",null,[e("Other clients can generate protoc clients from either a single "),n("strong",null,".proto"),e(" services description:")],-1),kt=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,[n("code",null,"x proto-<lang> services.proto")])])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),ht=n("p",null,[e("Or upload multiple "),n("strong",null,".proto"),e(" files by specifying a directory instead:")],-1),gt=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,[n("code",null,"x proto-<lang> /path/to/grpc/protos")])])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),mt=n("p",null,[e("Use "),n("strong",null,"-out"),e(" to specify a different directory to save the protoc generated classes to, e.g:")],-1),ft=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,[n("code",null,"x proto-<lang> services.proto -out /path/to/dir")])])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),vt=n("h3",{id:"using-curl",tabindex:"-1"},[e("Using curl "),n("a",{class:"header-anchor",href:"#using-curl","aria-hidden":"true"},"#")],-1),yt=n("p",null,[e("Alternatively you can use curl command-line HTTP Client to download protoc generated classes in a "),n("strong",null,".zip"),e(" archive:")],-1),wt=n("div",{class:"sh-copy cp flex cursor-pointer mb-3",onclick:"copy(this)"},[n("div",{class:"flex-grow bg-gray-800"},[n("div",{class:"pl-4 py-1 pb-1.5 align-middle whitespace-pre text-base text-gray-100"},[n("p",null,[e("curl -F 'file1=@services.proto' "),n("a",{href:"https://grpc.servicestack.net/protoc/%5Blang%5D?zip",target:"_blank",rel:"noopener noreferrer"},"https://grpc.servicestack.net/protoc/[lang]?zip"),e(" -L -o grpc.zip")])])]),n("div",{class:"flex"},[n("div",{class:"bg-green-600 text-white p-1.5 pb-0"},[n("svg",{class:"copied w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M5 13l4 4L19 7"})]),n("svg",{class:"nocopy w-6 h-6",title:"copy",fill:"none",stroke:"white",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg"},[n("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"1",d:"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2"})])])])],-1),bt=n("p",null,"Below is a complete list of different languages supported by this public gRPC Service:",-1),_t=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"Lang"),n("th",null,"Description")])]),n("tbody",null,[n("tr",null,[n("td",null,"cpp"),n("td",null,"C++")]),n("tr",null,[n("td",null,"csharp"),n("td",null,"C#")]),n("tr",null,[n("td",null,"dart"),n("td",null,"Dart")]),n("tr",null,[n("td",null,"go"),n("td",null,"Go")]),n("tr",null,[n("td",null,"java"),n("td",null,"Java")]),n("tr",null,[n("td",null,"java-lite"),n("td",null,"Java (Lite)")]),n("tr",null,[n("td",null,"js-node"),n("td",null,"JavaScript (node.js)")]),n("tr",null,[n("td",null,"objc"),n("td",null,"Objective C")]),n("tr",null,[n("td",null,"php"),n("td",null,"PHP")]),n("tr",null,[n("td",null,"python"),n("td",null,"Python")]),n("tr",null,[n("td",null,"ruby"),n("td",null,"Ruby")]),n("tr",null,[n("td",null,"swift"),n("td",null,"Swift")]),n("tr",null,[n("td",null,[n("strong",null,"gRPC Web Languages")]),n("td")]),n("tr",null,[n("td",null,"js-closure"),n("td",null,"JavaScript (Closure)")]),n("tr",null,[n("td",null,"js-commonjs"),n("td",null,"JavaScript (CommonJS)")]),n("tr",null,[n("td",null,"ts"),n("td",null,"TypeScript")]),n("tr",null,[n("td",null,"ts-binary"),n("td",null,"TypeScript (Binary)")])])],-1),St=[l,r,i,p,u,d,k,h,g,m,f,v,y,w,b,_,S,C,P,T,x,R,A,q,D,I,G,E,N,O,j,H,M,F,B,z,V,Q,L,W,U,J,$,X,K,Y,Z,nn,en,sn,tn,an,on,cn,ln,rn,pn,un,dn,kn,hn,gn,mn,fn,vn,yn,wn,bn,_n,Sn,Cn,Pn,Tn,xn,Rn,An,qn,Dn,In,Gn,En,Nn,On,jn,Hn,Mn,Fn,Bn,zn,Vn,Qn,Ln,Wn,Un,Jn,$n,Xn,Kn,Yn,Zn,ne,ee,se,te,ae,oe,ce,le,re,ie,pe,ue,de,ke,he,ge,me,fe,ve,ye,we,be,_e,Se,Ce,Pe,Te,xe,Re,Ae,qe,De,Ie,Ge,Ee,Ne,Oe,je,He,Me,Fe,Be,ze,Ve,Qe,Le,We,Ue,Je,$e,Xe,Ke,Ye,Ze,ns,es,ss,ts,as,os,cs,ls,rs,is,ps,us,ds,ks,hs,gs,ms,fs,vs,ys,ws,bs,_s,Ss,Cs,Ps,Ts,xs,Rs,As,qs,Ds,Is,Gs,Es,Ns,Os,js,Hs,Ms,Fs,Bs,zs,Vs,Qs,Ls,Ws,Us,Js,$s,Xs,Ks,Ys,Zs,nt,et,st,tt,at,ot,ct,lt,rt,it,pt,ut,dt,kt,ht,gt,mt,ft,vt,yt,wt,bt,_t];function Ct(Pt,Tt,xt,Rt,At,qt){return a(),t("div",null,St)}var Gt=s(c,[["render",Ct]]);export{It as __pageData,Gt as default};
