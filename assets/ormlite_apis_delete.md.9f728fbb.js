import{_ as n,c as s,o as a,a as t}from"./app.64b20f26.js";const m='{"title":"OrmLite DELETE APIs","description":"","frontmatter":{"title":"OrmLite DELETE APIs"},"headers":[{"level":2,"title":"Delete By Entity:","slug":"delete-by-entity"},{"level":2,"title":"Delete By Id:","slug":"delete-by-id"},{"level":2,"title":"Delete By inline Expression:","slug":"delete-by-inline-expression"},{"level":2,"title":"Delete By SqlExpression:","slug":"delete-by-sqlexpression"},{"level":2,"title":"Delete By Custom SQL","slug":"delete-by-custom-sql"},{"level":2,"title":"Delete from Table JOIN","slug":"delete-from-table-join"},{"level":2,"title":"Delete by Dictionary","slug":"delete-by-dictionary"},{"level":2,"title":"Delete Multiple Rows Examples","slug":"delete-multiple-rows-examples"}],"relativePath":"ormlite/apis/delete.md","lastUpdated":1645007721713}',e={},p=t(`<p>Deleting rows in OrmLite is simple and straight-forward with APIs to support multiple use-cases including deleting by entity, by Id, by lambda expression, by SqlExpression, or Custom SQL expression.</p><h2 id="delete-by-entity" tabindex="-1">Delete By Entity: <a class="header-anchor" href="#delete-by-entity" aria-hidden="true">#</a></h2><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> alive <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Single</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Track<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Name <span class="token operator">==</span> <span class="token string">&quot;Alive&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>alive<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> stillAlive <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Exists</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Track<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Id <span class="token operator">==</span> alive<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="delete-by-id" tabindex="-1">Delete By Id: <a class="header-anchor" href="#delete-by-id" aria-hidden="true">#</a></h2><div class="language-csharp"><pre><code>db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">DeleteById</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Track<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>trackId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="delete-by-inline-expression" tabindex="-1">Delete By inline Expression: <a class="header-anchor" href="#delete-by-inline-expression" aria-hidden="true">#</a></h2><p>Like updates for DELETE&#39;s we also provide APIs that take a where Expression:</p><div class="language-csharp"><pre><code>db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>Age <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> noOfNirvanaTracksDeleted <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Track<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>ArtistId <span class="token operator">==</span> nirvana<span class="token punctuation">.</span>Id <span class="token operator">&amp;&amp;</span> x<span class="token punctuation">.</span>Year <span class="token operator">==</span> <span class="token number">1991</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="delete-by-sqlexpression" tabindex="-1">Delete By SqlExpression: <a class="header-anchor" href="#delete-by-sqlexpression" aria-hidden="true">#</a></h2><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> q <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">From</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>Age <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="delete-by-custom-sql" tabindex="-1">Delete By Custom SQL <a class="header-anchor" href="#delete-by-custom-sql" aria-hidden="true">#</a></h2><p>As well as un-typed, string-based expressions:</p><div class="language-csharp"><pre><code>db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">where</span><span class="token punctuation">:</span> <span class="token string">&quot;Age = @age&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> age <span class="token operator">=</span> <span class="token number">27</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="delete-from-table-join" tabindex="-1">Delete from Table JOIN <a class="header-anchor" href="#delete-from-table-join" aria-hidden="true">#</a></h2><p>Using a SqlExpression to delete rows by querying from a joined table:</p><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> q <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">From</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Join</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PersonJoin<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Id <span class="token operator">==</span> y<span class="token punctuation">.</span>PersonId<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Where</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>PersonJoin<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Id <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

db<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>Not supported in MySql</p></blockquote><h2 id="delete-by-dictionary" tabindex="-1">Delete by Dictionary <a class="header-anchor" href="#delete-by-dictionary" aria-hidden="true">#</a></h2><div class="language-csharp"><pre><code>db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Rockstar<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">27</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="delete-multiple-rows-examples" tabindex="-1">Delete Multiple Rows Examples <a class="header-anchor" href="#delete-multiple-rows-examples" aria-hidden="true">#</a></h2><div class="language-csharp"><pre><code><span class="token comment">//Multiple Entities</span>
<span class="token class-name"><span class="token keyword">var</span></span> nirvana <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Single</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Artist<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Name <span class="token operator">==</span> <span class="token string">&quot;Nirvana&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> nirvanaTracks <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Select</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Track<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>ArtistId <span class="token operator">==</span> nirvana<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> noOfNirvanaTracksDeleted <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">DeleteAll</span><span class="token punctuation">(</span>nirvanaTracks<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//Multiple rows by Ids</span>
<span class="token class-name"><span class="token keyword">var</span></span> live <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Single</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Artist<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Name <span class="token operator">==</span> <span class="token string">&quot;Live&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> liveTrackIds <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Column</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">From</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Track<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>ArtistId <span class="token operator">==</span> live<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> noOfLiveTracksDeleted <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">DeleteByIds</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Track<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>liveTrackIds<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Delete all Tracks (WARNING)</span>
<span class="token class-name"><span class="token keyword">var</span></span> noOfTracksDeleted <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">DeleteAll</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Track<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,21),o=[p];function c(l,u,i,k,r,d){return a(),s("div",null,o)}var h=n(e,[["render",c]]);export{m as __pageData,h as default};
