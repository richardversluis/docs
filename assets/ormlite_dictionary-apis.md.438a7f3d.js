import{_ as n,c as s,o as a,a as t}from"./app.64b20f26.js";const m='{"title":"Dictionary APIs","description":"","frontmatter":{"title":"Dictionary APIs"},"headers":[{"level":3,"title":"Insert by Dictionary","slug":"insert-by-dictionary"},{"level":3,"title":"Update by Dictionary","slug":"update-by-dictionary"},{"level":3,"title":"UpdateOnly by Dictionary","slug":"updateonly-by-dictionary"},{"level":3,"title":"Delete by Dictionary","slug":"delete-by-dictionary"}],"relativePath":"ormlite/dictionary-apis.md","lastUpdated":1645007721717}',p={},o=t(`<p>OrmLite&#39;s Dictionary APIs allow you to customize which parts of a Data Model should be modified by converting it into then manipulating an Object Dictionary, e.g:</p><h3 id="insert-by-dictionary" tabindex="-1">Insert by Dictionary <a class="header-anchor" href="#insert-by-dictionary" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> row <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Person</span> <span class="token punctuation">{</span> FirstName <span class="token operator">=</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span> LastName <span class="token operator">=</span> <span class="token string">&quot;Smith&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> obj <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">ToObjectDictionary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>LastName<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

row<span class="token punctuation">.</span>Id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Insert</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token named-parameter punctuation">selectIdentity</span><span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="update-by-dictionary" tabindex="-1">Update by Dictionary <a class="header-anchor" href="#update-by-dictionary" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token class-name">Person</span> row <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">SingleById</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>row<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> obj <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">ToObjectDictionary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>LastName<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;Smith&quot;</span><span class="token punctuation">;</span>
db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Update</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="updateonly-by-dictionary" tabindex="-1">UpdateOnly by Dictionary <a class="header-anchor" href="#updateonly-by-dictionary" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code><span class="token comment">// By Primary Key Id</span>
<span class="token class-name"><span class="token keyword">var</span></span> fields <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>Id<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>FirstName<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>LastName<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">UpdateOnly</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>fields<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// By Custom Where Expression</span>
<span class="token class-name"><span class="token keyword">var</span></span> fields <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>FirstName<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>LastName<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">UpdateOnly</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Person<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span>fields<span class="token punctuation">,</span> p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>LastName <span class="token operator">==</span> <span class="token string">&quot;Hendrix&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="delete-by-dictionary" tabindex="-1">Delete by Dictionary <a class="header-anchor" href="#delete-by-dictionary" aria-hidden="true">#</a></h3><div class="language-csharp"><pre><code>db<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Delete</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Rockstar<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token string">&quot;Age&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">27</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,9),e=[o];function c(l,u,i,k,r,d){return a(),s("div",null,e)}var g=n(p,[["render",c]]);export{m as __pageData,g as default};
