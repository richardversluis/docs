import{_ as n,c as a,o as s,a as t}from"./app.64b20f26.js";const w='{"title":"OrmLite Filters","description":"","frontmatter":{"title":"OrmLite Filters"},"headers":[{"level":2,"title":"Validation Example","slug":"validation-example"}],"relativePath":"ormlite/filters.md","lastUpdated":1645007721717}',p={},o=t(`__VP_STATIC_START__<p>Similar to interceptors in some heavy ORMs, Insert and Update filters get fired just before any <strong>INSERT</strong> or <strong>UPDATE</strong> operation using OrmLite&#39;s typed API&#39;s (i.e. not dynamic SQL or partial updates using anon types). This functionality can be used for easily auto-maintaining Audit information for your POCO data models, e.g:</p><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IAudit</span> 
<span class="token punctuation">{</span>
    <span class="token return-type class-name">DateTime</span> CreatedDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token return-type class-name">DateTime</span> ModifiedDate <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token return-type class-name"><span class="token keyword">string</span></span> ModifiedBy <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

OrmLiteConfig<span class="token punctuation">.</span>InsertFilter <span class="token operator">=</span> <span class="token punctuation">(</span>dbCmd<span class="token punctuation">,</span> row<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token keyword">is</span> <span class="token class-name">IAudit</span> auditRow<span class="token punctuation">)</span>
        auditRow<span class="token punctuation">.</span>CreatedDate <span class="token operator">=</span> auditRow<span class="token punctuation">.</span>ModifiedDate <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

OrmLiteConfig<span class="token punctuation">.</span>UpdateFilter <span class="token operator">=</span> <span class="token punctuation">(</span>dbCmd<span class="token punctuation">,</span> row<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token keyword">is</span> <span class="token class-name">IAudit</span> auditRow<span class="token punctuation">)</span>
        auditRow<span class="token punctuation">.</span>ModifiedDate <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>Which will ensure that the <code>CreatedDate</code> and <code>ModifiedDate</code> fields are populated on every insert and update.</p><h2 id="validation-example" tabindex="-1">Validation Example <a class="header-anchor" href="#validation-example" aria-hidden="true">#</a></h2><p>The filters can also be used for validation where throwing an exception will prevent the operation and bubble the exception, e.g:</p><div class="language-csharp"><pre><code>OrmLiteConfig<span class="token punctuation">.</span>InsertFilter <span class="token operator">=</span> OrmLiteConfig<span class="token punctuation">.</span>UpdateFilter <span class="token operator">=</span> <span class="token punctuation">(</span>dbCmd<span class="token punctuation">,</span> row<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token keyword">is</span> <span class="token class-name">IAudit</span> auditRow <span class="token operator">&amp;&amp;</span> auditRow<span class="token punctuation">.</span>ModifiedBy <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ArgumentNullException</span><span class="token punctuation">(</span><span class="token string">&quot;ModifiedBy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">try</span>
<span class="token punctuation">{</span>
    db<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AuditTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ArgumentNullException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">//throws ArgumentNullException</span>
<span class="token punctuation">}</span>

db<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">AuditTable</span> <span class="token punctuation">{</span> ModifiedBy <span class="token operator">=</span> <span class="token string">&quot;Me!&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//succeeds</span>
</code></pre></div>__VP_STATIC_END__`,6),e=[o];function c(i,l,u,r,k,d){return s(),a("div",null,e)}var f=n(p,[["render",c]]);export{w as __pageData,f as default};
