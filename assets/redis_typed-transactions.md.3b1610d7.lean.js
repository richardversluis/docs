import{_ as n,c as s,o as a,a as t}from"./app.64b20f26.js";const y='{"title":"Redis Typed Transactions","description":"","frontmatter":{"slug":"typed-transactions","title":"Redis Typed Transactions"},"headers":[{"level":2,"title":"Introduction","slug":"introduction"},{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Details","slug":"details"}],"relativePath":"redis/typed-transactions.md","lastUpdated":1645007721741}',p={},o=t(`__VP_STATIC_START__<p>The <a href="./transactions.html">Redis Transactions</a> interface implemented by <a href="https://github.com/ServiceStack/ServiceStack.Redis" target="_blank" rel="noopener noreferrer">ServiceStack&#39;s C# Redis Client</a>.</p><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p>Redis transaction interface provides useful overloads that let you Queue-up any <a href="./typed-client.html">IRedisTypedClient</a> operation within a single transaction. The API provides support for a callback so you also have access to any return values returned as part of the transaction as well.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-hidden="true">#</a></h2><p>Below is a simple example showing how to access, use and commit the transaction.</p><div class="language-csharp"><pre><code><span class="token class-name"><span class="token keyword">var</span></span> typedClient <span class="token operator">=</span> Redis<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">GetTypedClient</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>MyPocoType<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			
<span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> trans <span class="token operator">=</span> typedClient<span class="token punctuation">.</span><span class="token function">CreateTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    trans<span class="token punctuation">.</span><span class="token function">QueueCommand</span><span class="token punctuation">(</span>r <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;nosqldbs&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">MyPocoType</span> <span class="token punctuation">{</span>Id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;Redis&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    trans<span class="token punctuation">.</span><span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>For a transaction that operates on string values see <a href="./transactions.html">IRedisTransaction</a>.</p><h2 id="details" tabindex="-1">Details <a class="header-anchor" href="#details" aria-hidden="true">#</a></h2><div class="language-csharp"><pre><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IRedisTypedTransaction<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> 
    <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IDisposable</span></span>
<span class="token punctuation">{</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Action<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Action<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action</span> onSuccessCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Action<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action</span> onSuccessCallback<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>Exception<span class="token punctuation">&gt;</span></span> onErrorCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>Exception<span class="token punctuation">&gt;</span></span> onErrorCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">bool</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>Exception<span class="token punctuation">&gt;</span></span> onErrorCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">double</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">double</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">double</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">double</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">double</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>Exception<span class="token punctuation">&gt;</span></span> onErrorCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>Exception<span class="token punctuation">&gt;</span></span> onErrorCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>Exception<span class="token punctuation">&gt;</span></span> onErrorCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> T<span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> T<span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> T<span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>Exception<span class="token punctuation">&gt;</span></span> onErrorCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>Exception<span class="token punctuation">&gt;</span></span> onErrorCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> List<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> List<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">QueueCommand</span><span class="token punctuation">(</span><span class="token class-name">Func<span class="token punctuation">&lt;</span>IRedisTypedClient<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">,</span> List<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> command<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span>T<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> onSuccessCallback<span class="token punctuation">,</span> <span class="token class-name">Action<span class="token punctuation">&lt;</span>Exception<span class="token punctuation">&gt;</span></span> onErrorCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>__VP_STATIC_END__`,9),c=[o];function e(u,l,k,i,d,r){return a(),s("div",null,c)}var g=n(p,[["render",e]]);export{y as __pageData,g as default};
